{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2
    ],
    "data": [
        "+ ",
        "  geom_point()+",
        "+ ",
        "  geom_abline(intercept=coef(m2)[1],slope=coef(m2)[2])+",
        "+ ",
        "  geom_line(aes(y=predict(m2)))",
        "> ",
        "dd = MASS::mcycle %>%",
        "+ ",
        "  rename(y=accel,x=times) %>% filter(x>20) |>",
        "+ ",
        "  mutate(x=x-10)",
        "> ",
        "",
        "> ",
        "dd$poly1=poly(dd$x,2,raw=T)[,1]",
        "> ",
        "dd$poly2=poly(dd$x,2,raw=T)[,2]",
        "> ",
        "",
        "> ",
        "m1 = lm(y~poly1,dd)",
        "> ",
        "m2 = lm(y~poly1+poly2,dd)",
        "> ",
        "",
        "> ",
        "coef(m1)",
        "(Intercept)       poly1 \n -83.231843    2.705295 \n",
        "> ",
        "coef(m2)",
        " (Intercept)        poly1        poly2 \n-275.9550844   19.1395270   -0.3008568 \n",
        "> ",
        "",
        "> ",
        "ggplot(dd,aes(x=x,y=y))+",
        "+ ",
        "  geom_point()+",
        "+ ",
        "  geom_abline(intercept=coef(m2)[1],slope=coef(m2)[2])+",
        "+ ",
        "  geom_line(aes(y=predict(m2)))",
        "> ",
        "dd = MASS::mcycle %>%",
        "+ ",
        "  rename(y=accel,x=times) %>% filter(x>20) |>",
        "+ ",
        "  mutate(x=x-10)",
        "> ",
        "",
        "> ",
        "dd$poly1=poly(dd$x,2,raw=T)[,1]",
        "> ",
        "dd$poly2=poly(dd$x,2,raw=T)[,2]",
        "> ",
        "",
        "> ",
        "m1 = lm(y~poly1,dd)",
        "> ",
        "m2 = lm(y~poly1+poly2,dd)",
        "> ",
        "",
        "> ",
        "coef(m1)",
        "(Intercept)       poly1 \n -83.231843    2.705295 \n",
        "> ",
        "coef(m2)",
        " (Intercept)        poly1        poly2 \n-275.9550844   19.1395270   -0.3008568 \n",
        "> ",
        "",
        "> ",
        "ggplot(dd,aes(x=x,y=y))+",
        "+ ",
        "  geom_point()+",
        "+ ",
        "  geom_abline(intercept=coef(m2)[1],slope=coef(m2)[2])+",
        "+ ",
        "  geom_line(aes(y=predict(m2)))",
        "> ",
        "dd = MASS::mcycle %>%",
        "+ ",
        "  rename(y=accel,x=times) %>% filter(x>20) |>",
        "+ ",
        "  mutate(x=x-20)",
        "> ",
        "",
        "> ",
        "dd$poly1=poly(dd$x,2,raw=T)[,1]",
        "> ",
        "dd$poly2=poly(dd$x,2,raw=T)[,2]",
        "> ",
        "",
        "> ",
        "m1 = lm(y~poly1,dd)",
        "> ",
        "m2 = lm(y~poly1+poly2,dd)",
        "> ",
        "",
        "> ",
        "coef(m1)",
        "(Intercept)       poly1 \n -56.178888    2.705295 \n",
        "> ",
        "coef(m2)",
        " (Intercept)        poly1        poly2 \n-114.6454979   13.1223903   -0.3008568 \n",
        "> ",
        "",
        "> ",
        "ggplot(dd,aes(x=x,y=y))+",
        "+ ",
        "  geom_point()+",
        "+ ",
        "  geom_abline(intercept=coef(m2)[1],slope=coef(m2)[2])+",
        "+ ",
        "  geom_line(aes(y=predict(m2)))",
        "> ",
        "m2 = lm(y~scale(poly1)+scale(poly2),dd)",
        "> ",
        "coef(m1)",
        "(Intercept)       poly1 \n -56.178888    2.705295 \n",
        "> ",
        "coef(m2)",
        " (Intercept) scale(poly1) scale(poly2) \n   -17.12027    130.20443   -107.55875 \n",
        "> ",
        "ggplot(dd,aes(x=x,y=y))+",
        "+ ",
        "  geom_point()+",
        "+ ",
        "  geom_abline(intercept=coef(m2)[1],slope=coef(m2)[2])+",
        "+ ",
        "  geom_line(aes(y=predict(m2)))",
        "> ",
        "dd = MASS::mcycle %>%",
        "+ ",
        "  rename(y=accel,x=times) %>% filter(x>20) |>",
        "+ ",
        "  mutate(x=x-20)",
        "> ",
        "",
        "> ",
        "dd$poly1=poly(dd$x,2,raw=T)[,1]",
        "> ",
        "dd$poly2=poly(dd$x,2,raw=T)[,2]",
        "> ",
        "",
        "> ",
        "m1 = lm(y~poly1,dd)",
        "> ",
        "m2 = lm(y~scale(poly1,scale=F)+scale(poly2,scale=F),dd)",
        "> ",
        "",
        "> ",
        "coef(m1)",
        "(Intercept)       poly1 \n -56.178888    2.705295 \n",
        "> ",
        "coef(m2)",
        "            (Intercept) scale(poly1, scale = F) scale(poly2, scale = F) \n            -17.1202703              13.1223903              -0.3008568 \n",
        "> ",
        "",
        "> ",
        "ggplot(dd,aes(x=x,y=y))+",
        "+ ",
        "  geom_point()+",
        "+ ",
        "  geom_abline(intercept=coef(m2)[1],slope=coef(m2)[2])+",
        "+ ",
        "  geom_line(aes(y=predict(m2)))",
        "> ",
        "dd = MASS::mcycle %>%",
        "+ ",
        "  rename(y=accel,x=times) %>% filter(x>20) |>",
        "+ ",
        "  mutate(x=x-100)",
        "> ",
        "",
        "> ",
        "dd$poly1=poly(dd$x,2,raw=T)[,1]",
        "> ",
        "dd$poly2=poly(dd$x,2,raw=T)[,2]",
        "> ",
        "",
        "> ",
        "m1 = lm(y~poly1,dd)",
        "> ",
        "m2 = lm(y~poly1+poly2,dd)",
        "> ",
        "",
        "> ",
        "coef(m1)",
        "(Intercept)       poly1 \n 160.244752    2.705295 \n",
        "> ",
        "coef(m2)",
        " (Intercept)        poly1        poly2 \n-990.3379873  -35.0147026   -0.3008568 \n",
        "> ",
        "",
        "> ",
        "ggplot(dd,aes(x=x,y=y))+",
        "+ ",
        "  geom_point()+",
        "+ ",
        "  geom_abline(intercept=coef(m2)[1],slope=coef(m2)[2])+",
        "+ ",
        "  geom_line(aes(y=predict(m2)))",
        "> ",
        "dd = MASS::mcycle %>%",
        "+ ",
        "  rename(y=accel,x=times) %>% filter(x>20) |>",
        "+ ",
        "  mutate(x=x-20)",
        "> ",
        "",
        "> ",
        "dd$poly1=poly(dd$x,2,raw=T)[,1]",
        "> ",
        "dd$poly2=poly(dd$x,2,raw=T)[,2]",
        "> ",
        "",
        "> ",
        "m1 = lm(y~poly1,dd)",
        "> ",
        "m2 = lm(y~poly1+poly2,dd)",
        "> ",
        "",
        "> ",
        "coef(m1)",
        "(Intercept)       poly1 \n -56.178888    2.705295 \n",
        "> ",
        "coef(m2)",
        " (Intercept)        poly1        poly2 \n-114.6454979   13.1223903   -0.3008568 \n",
        "> ",
        "",
        "> ",
        "ggplot(dd,aes(x=x,y=y))+",
        "+ ",
        "  geom_point()+",
        "+ ",
        "  geom_abline(intercept=coef(m2)[1],slope=coef(m2)[2])+",
        "+ ",
        "  geom_line(aes(y=predict(m2)))",
        "> ",
        "dd = MASS::mcycle %>%",
        "+ ",
        "  rename(y=accel,x=times) %>% filter(x>20) |>",
        "+ ",
        "  mutate(x=x-20)",
        "> ",
        "",
        "> ",
        "dd$poly1=poly(dd$x,2,raw=F)[,1]",
        "> ",
        "dd$poly2=poly(dd$x,2,raw=F)[,2]",
        "> ",
        "",
        "> ",
        "m1 = lm(y~poly1,dd)",
        "> ",
        "m2 = lm(y~poly1+poly2,dd)",
        "> ",
        "",
        "> ",
        "coef(m1)",
        "(Intercept)       poly1 \n  -17.12027   229.34483 \n",
        "> ",
        "coef(m2)",
        "(Intercept)       poly1       poly2 \n  -17.12027   229.34483  -254.21157 \n",
        "> ",
        "",
        "> ",
        "ggplot(dd,aes(x=x,y=y))+",
        "+ ",
        "  geom_point()+",
        "+ ",
        "  geom_abline(intercept=coef(m2)[1],slope=coef(m2)[2])+",
        "+ ",
        "  geom_line(aes(y=predict(m2)))",
        "> ",
        "source(\"~/.active-rstudio-document\", echo=TRUE)",
        "\n> dd = MASS::mcycle %>%\n+   rename(y=accel,x=times) %>% filter(x>20) |>\n+   mutate(x=x-20)\n\n> dd$poly1=poly(dd$x,2,raw=F)[,1]\n\n> dd$poly2=poly(dd$x,2,raw=F)[,2]\n\n> m1 = lm(y~poly1,dd)\n\n> m2 = lm(y~poly1+poly2,dd)\n\n> coef(m1)\n(Intercept)       poly1 \n  -17.12027   229.34483 \n\n> coef(m2)\n(Intercept)       poly1       poly2 \n  -17.12027   229.34483  -254.21157 \n\n> ggplot(dd,aes(x=x,y=y))+\n+   geom_point()+\n+   geom_abline(intercept=coef(m2)[1],slope=coef(m2)[2])+\n+   geom_line(aes(y=predict(m2)))\n",
        "> ",
        "coef(m2)",
        "(Intercept)       poly1       poly2 \n  -17.12027   229.34483  -254.21157 \n",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        ")",
        "> ",
        "cbind(1,df)",
        "    1 C1 C2\n1   1  a  d\n2   1  a  e\n3   1  a  d\n4   1  a  e\n5   1  a  d\n6   1  a  e\n7   1  a  d\n8   1  a  e\n9   1  a  d\n10  1  a  e\n11  1  a  d\n12  1  a  e\n13  1  a  d\n14  1  a  e\n15  1  a  d\n16  1  a  e\n17  1  a  d\n18  1  a  e\n19  1  a  d\n20  1  a  e\n21  1  a  d\n22  1  a  e\n23  1  a  d\n24  1  a  e\n25  1  a  d\n26  1  a  e\n27  1  a  d\n28  1  a  e\n29  1  a  d\n30  1  a  e\n31  1  a  d\n32  1  a  e\n33  1  a  d\n34  1  a  e\n35  1  a  d\n36  1  a  e\n37  1  a  d\n38  1  a  e\n39  1  a  d\n40  1  a  e\n41  1  a  d\n42  1  a",
        "  e\n43  1  a  d\n44  1  a  e\n45  1  a  d\n46  1  a  e\n47  1  a  d\n48  1  a  e\n49  1  a  d\n50  1  a  e\n51  1  b  d\n52  1  b  e\n53  1  b  d\n54  1  b  e\n55  1  b  d\n56  1  b  e\n57  1  b  d\n58  1  b  e\n59  1  b  d\n60  1  b  e\n61  1  b  d\n62  1  b  e\n63  1  b  d\n64  1  b  e\n65  1  b  d\n66  1  b  e\n67  1  b  d\n68  1  b  e\n69  1  b  d\n70  1  b  e\n71  1  b  d\n72  1  b  e\n73  1  b  d\n74  1  b  e\n75  1  b  d\n76  1  b  e\n77  1  b  d\n78  1  b  e\n79  1  b  d\n80  1  b  e\n81  1  b  d\n82  1  b  e\n83  1  b  d\n84  1  b  e\n85  1",
        "  b  d\n86  1  b  e\n87  1  b  d\n88  1  b  e\n89  1  b  d\n90  1  b  e\n91  1  b  d\n92  1  b  e\n93  1  b  d\n94  1  b  e\n95  1  b  d\n96  1  b  e\n97  1  b  d\n98  1  b  e\n99  1  b  d\n100 1  b  e\n101 1  c  d\n102 1  c  e\n103 1  c  d\n104 1  c  e\n105 1  c  d\n106 1  c  e\n107 1  c  d\n108 1  c  e\n109 1  c  d\n110 1  c  e\n111 1  c  d\n112 1  c  e\n113 1  c  d\n114 1  c  e\n115 1  c  d\n116 1  c  e\n117 1  c  d\n118 1  c  e\n119 1  c  d\n120 1  c  e\n121 1  c  d\n122 1  c  e\n123 1  c  d\n124 1  c  e\n125 1  c  d\n126 1  c  e\n127 1  c  d\n128",
        " 1  c  e\n129 1  c  d\n130 1  c  e\n131 1  c  d\n132 1  c  e\n133 1  c  d\n134 1  c  e\n135 1  c  d\n136 1  c  e\n137 1  c  d\n138 1  c  e\n139 1  c  d\n140 1  c  e\n141 1  c  d\n142 1  c  e\n143 1  c  d\n144 1  c  e\n145 1  c  d\n146 1  c  e\n147 1  c  d\n148 1  c  e\n149 1  c  d\n150 1  c  e\n",
        "> ",
        "model.matrix(rnorm(150)~C1*C2,df)",
        "    (Intercept) C1b C1c C2e C1b:C2e C1c:C2e\n1             1   0   0   0       0       0\n2             1   0   0   1       0       0\n3             1   0   0   0       0       0\n4             1   0   0   1       0       0\n5             1   0   0   0       0       0\n6             1   0   0   1       0       0\n7             1   0   0   0       0       0\n8             1   0   0   1       0       0\n9             1   0   0   0       0       0\n10            1   0   0   1       0       0\n11            1   0   0   0       0",
        "       0\n12            1   0   0   1       0       0\n13            1   0   0   0       0       0\n14            1   0   0   1       0       0\n15            1   0   0   0       0       0\n16            1   0   0   1       0       0\n17            1   0   0   0       0       0\n18            1   0   0   1       0       0\n19            1   0   0   0       0       0\n20            1   0   0   1       0       0\n21            1   0   0   0       0       0\n22            1   0   0   1       0       0\n23            1   0",
        "   0   0       0       0\n24            1   0   0   1       0       0\n25            1   0   0   0       0       0\n26            1   0   0   1       0       0\n27            1   0   0   0       0       0\n28            1   0   0   1       0       0\n29            1   0   0   0       0       0\n30            1   0   0   1       0       0\n31            1   0   0   0       0       0\n32            1   0   0   1       0       0\n33            1   0   0   0       0       0\n34            1   0   0   1       0       0\n35 ",
        "           1   0   0   0       0       0\n36            1   0   0   1       0       0\n37            1   0   0   0       0       0\n38            1   0   0   1       0       0\n39            1   0   0   0       0       0\n40            1   0   0   1       0       0\n41            1   0   0   0       0       0\n42            1   0   0   1       0       0\n43            1   0   0   0       0       0\n44            1   0   0   1       0       0\n45            1   0   0   0       0       0\n46            1   0   0   1       0",
        "       0\n47            1   0   0   0       0       0\n48            1   0   0   1       0       0\n49            1   0   0   0       0       0\n50            1   0   0   1       0       0\n51            1   1   0   0       0       0\n52            1   1   0   1       1       0\n53            1   1   0   0       0       0\n54            1   1   0   1       1       0\n55            1   1   0   0       0       0\n56            1   1   0   1       1       0\n57            1   1   0   0       0       0\n58            1   1",
        "   0   1       1       0\n59            1   1   0   0       0       0\n60            1   1   0   1       1       0\n61            1   1   0   0       0       0\n62            1   1   0   1       1       0\n63            1   1   0   0       0       0\n64            1   1   0   1       1       0\n65            1   1   0   0       0       0\n66            1   1   0   1       1       0\n67            1   1   0   0       0       0\n68            1   1   0   1       1       0\n69            1   1   0   0       0       0\n70 ",
        "           1   1   0   1       1       0\n71            1   1   0   0       0       0\n72            1   1   0   1       1       0\n73            1   1   0   0       0       0\n74            1   1   0   1       1       0\n75            1   1   0   0       0       0\n76            1   1   0   1       1       0\n77            1   1   0   0       0       0\n78            1   1   0   1       1       0\n79            1   1   0   0       0       0\n80            1   1   0   1       1       0\n81            1   1   0   0       0",
        "       0\n82            1   1   0   1       1       0\n83            1   1   0   0       0       0\n84            1   1   0   1       1       0\n85            1   1   0   0       0       0\n86            1   1   0   1       1       0\n87            1   1   0   0       0       0\n88            1   1   0   1       1       0\n89            1   1   0   0       0       0\n90            1   1   0   1       1       0\n91            1   1   0   0       0       0\n92            1   1   0   1       1       0\n93            1   1",
        "   0   0       0       0\n94            1   1   0   1       1       0\n95            1   1   0   0       0       0\n96            1   1   0   1       1       0\n97            1   1   0   0       0       0\n98            1   1   0   1       1       0\n99            1   1   0   0       0       0\n100           1   1   0   1       1       0\n101           1   0   1   0       0       0\n102           1   0   1   1       0       1\n103           1   0   1   0       0       0\n104           1   0   1   1       0       1\n105",
        "           1   0   1   0       0       0\n106           1   0   1   1       0       1\n107           1   0   1   0       0       0\n108           1   0   1   1       0       1\n109           1   0   1   0       0       0\n110           1   0   1   1       0       1\n111           1   0   1   0       0       0\n112           1   0   1   1       0       1\n113           1   0   1   0       0       0\n114           1   0   1   1       0       1\n115           1   0   1   0       0       0\n116           1   0   1   1       0",
        "       1\n117           1   0   1   0       0       0\n118           1   0   1   1       0       1\n119           1   0   1   0       0       0\n120           1   0   1   1       0       1\n121           1   0   1   0       0       0\n122           1   0   1   1       0       1\n123           1   0   1   0       0       0\n124           1   0   1   1       0       1\n125           1   0   1   0       0       0\n126           1   0   1   1       0       1\n127           1   0   1   0       0       0\n128           1   0",
        "   1   1       0       1\n129           1   0   1   0       0       0\n130           1   0   1   1       0       1\n131           1   0   1   0       0       0\n132           1   0   1   1       0       1\n133           1   0   1   0       0       0\n134           1   0   1   1       0       1\n135           1   0   1   0       0       0\n136           1   0   1   1       0       1\n137           1   0   1   0       0       0\n138           1   0   1   1       0       1\n139           1   0   1   0       0       0\n140",
        "           1   0   1   1       0       1\n141           1   0   1   0       0       0\n142           1   0   1   1       0       1\n143           1   0   1   0       0       0\n144           1   0   1   1       0       1\n145           1   0   1   0       0       0\n146           1   0   1   1       0       1\n147           1   0   1   0       0       0\n148           1   0   1   1       0       1\n149           1   0   1   0       0       0\n150           1   0   1   1       0       1\nattr(,\"assign\")\n[1] 0 1 1 2 3 3",
        "\nattr(,\"contrasts\")\nattr(,\"contrasts\")$C1\n[1] \"contr.treatment\"\n\nattr(,\"contrasts\")$C2\n[1] \"contr.treatment\"\n\n",
        "> ",
        "names(model.matrix(rnorm(150)~C1*C2,df))",
        "NULL\n",
        "> ",
        "colnames(model.matrix(rnorm(150)~C1*C2,df))",
        "[1] \"(Intercept)\" \"C1b\"         \"C1c\"         \"C2e\"         \"C1b:C2e\"     \"C1c:C2e\"    \n",
        "> ",
        "model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,-2,-1,-1)",
        "    [,1]\n1      0\n2     -2\n3      0\n4     -2\n5      0\n6     -2\n7      0\n8     -2\n9      0\n10    -2\n11     0\n12    -2\n13     0\n14    -2\n15     0\n16    -2\n17     0\n18    -2\n19     0\n20    -2\n21     0\n22    -2\n23     0\n24    -2\n25     0\n26    -2\n27     0\n28    -2\n29     0\n30    -2\n31     0\n32    -2\n33     0\n34    -2\n35     0\n36    -2\n37     0\n38    -2\n39     0\n40    -2\n41     0\n42    -2\n43     0\n44    -2\n45     0\n46    -2\n47     0\n48    -2\n49     0\n50    -2\n51     1\n52    -2\n53     1\n54    -2\n55     1\n56    -2",
        "\n57     1\n58    -2\n59     1\n60    -2\n61     1\n62    -2\n63     1\n64    -2\n65     1\n66    -2\n67     1\n68    -2\n69     1\n70    -2\n71     1\n72    -2\n73     1\n74    -2\n75     1\n76    -2\n77     1\n78    -2\n79     1\n80    -2\n81     1\n82    -2\n83     1\n84    -2\n85     1\n86    -2\n87     1\n88    -2\n89     1\n90    -2\n91     1\n92    -2\n93     1\n94    -2\n95     1\n96    -2\n97     1\n98    -2\n99     1\n100   -2\n101    2\n102   -1\n103    2\n104   -1\n105    2\n106   -1\n107    2\n108   -1\n109    2\n110   -1\n111    2\n112   -1\n113    2",
        "\n114   -1\n115    2\n116   -1\n117    2\n118   -1\n119    2\n120   -1\n121    2\n122   -1\n123    2\n124   -1\n125    2\n126   -1\n127    2\n128   -1\n129    2\n130   -1\n131    2\n132   -1\n133    2\n134   -1\n135    2\n136   -1\n137    2\n138   -1\n139    2\n140   -1\n141    2\n142   -1\n143    2\n144   -1\n145    2\n146   -1\n147    2\n148   -1\n149    2\n150   -1\n",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,-2,-1,-1),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+geom_point()",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,-1,2,-2,1,-1),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+geom_point()",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,-1,2,0,1,-1),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+geom_point()",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+geom_point(size=4,alpha=.4)",
        "> ",
        "source(\"~/.active-rstudio-document\", echo=TRUE)",
        "\n> library(tidyverse)\n\n> library(marginaleffects)\n\n> # cat cat interactions\n> \n> # balanced\n> df = tibble(\n+   C1 = rep(letters[1:3],e=50),\n+   C2 = rep(letters[4:5],75),\n+   lp = model.matrix(rnorm(15 .... [TRUNCATED] \n\n> ggplot(df,aes(x=C1,y=lp,col=C2))+geom_jitter(size=4,alpha=.4,width=.1)\n\n> # unbalanced\n> \n",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2))",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,-1,2,0,2,-1),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,0,-3,-4),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "# unbalanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = sample(letters[1:3],150,T,prob=c(.4,.4,.2))",
        "+ ",
        "  C2 = sample(letters[4:5],150,T),",
        "Error: unexpected symbol in:\n\"  C1 = sample(letters[1:3],150,T,prob=c(.4,.4,.2))\n  C2\"\n",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "# unbalanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = sample(letters[1:3],150,T,prob=c(.4,.4,.2)),",
        "+ ",
        "  C2 = sample(letters[4:5],150,T),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "# unbalanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = sample(letters[1:3],150,T,prob=c(.4,.4,.2)),",
        "+ ",
        "  C2 = sample(letters[4:5],150,T),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "mt = lm(y~C1*C2,df, contrasts=list(C1=\"contr.sum\",C2=\"contr.sum\"))",
        "> ",
        "ms = lm(y~C1*C2,df, contrasts=list(C1=\"contr.sum\",C2=\"contr.sum\"))",
        "> ",
        "mt = lm(y~C1*C2,df)",
        "> ",
        "ms = lm(y~C1*C2,df, contrasts=list(C1=\"contr.sum\",C2=\"contr.sum\"))",
        "> ",
        "anova(mt)",
        "Analysis of Variance Table\n\nResponse: y\n           Df Sum Sq Mean Sq F value  Pr(>F)  \nC1          2   7.33  3.6640  1.0984 0.33619  \nC2          1  15.02 15.0235  4.5036 0.03553 *\nC1:C2       2  23.96 11.9814  3.5917 0.03005 *\nResiduals 144 480.37  3.3359                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "anova(ms)",
        "Analysis of Variance Table\n\nResponse: y\n           Df Sum Sq Mean Sq F value  Pr(>F)  \nC1          2   7.33  3.6640  1.0984 0.33619  \nC2          1  15.02 15.0235  4.5036 0.03553 *\nC1:C2       2  23.96 11.9814  3.5917 0.03005 *\nResiduals 144 480.37  3.3359                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "mt = lm(y~C1*C2,udf)",
        "Error in eval(mf, parent.frame()) : object 'udf' not found\n",
        "> ",
        "ms = lm(y~C1*C2,udf, contrasts=list(C1=\"contr.sum\",C2=\"contr.sum\"))",
        "Error in eval(mf, parent.frame()) : object 'udf' not found\n",
        "> ",
        "anova(mt)",
        "Analysis of Variance Table\n\nResponse: y\n           Df Sum Sq Mean Sq F value  Pr(>F)  \nC1          2   7.33  3.6640  1.0984 0.33619  \nC2          1  15.02 15.0235  4.5036 0.03553 *\nC1:C2       2  23.96 11.9814  3.5917 0.03005 *\nResiduals 144 480.37  3.3359                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "anova(ms)",
        "Analysis of Variance Table\n\nResponse: y\n           Df Sum Sq Mean Sq F value  Pr(>F)  \nC1          2   7.33  3.6640  1.0984 0.33619  \nC2          1  15.02 15.0235  4.5036 0.03553 *\nC1:C2       2  23.96 11.9814  3.5917 0.03005 *\nResiduals 144 480.37  3.3359                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "mt = lm(y~C1*C2,udf)",
        "Error in eval(mf, parent.frame()) : object 'udf' not found\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(marginaleffects)",
        "> ",
        "# cat cat interactions",
        "> ",
        "",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# unbalanced",
        "> ",
        "udf = tibble(",
        "+ ",
        "  C1 = sample(letters[1:3],150,T,prob=c(.4,.4,.2)),",
        "+ ",
        "  C2 = sample(letters[4:5],150,T),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "> ",
        "ggplot(udf,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "mt = lm(y~C1*C2,udf)",
        "> ",
        "ms = lm(y~C1*C2,udf, contrasts=list(C1=\"contr.sum\",C2=\"contr.sum\"))",
        "> ",
        "",
        "> ",
        "anova(mt)",
        "Analysis of Variance Table\n\nResponse: y\n           Df Sum Sq Mean Sq F value Pr(>F)\nC1          2   0.64 0.31921  0.1297 0.8785\nC2          1   1.84 1.84289  0.7486 0.3883\nC1:C2       2   0.33 0.16577  0.0673 0.9349\nResiduals 144 354.48 2.46168               \n",
        "> ",
        "anova(ms)",
        "Analysis of Variance Table\n\nResponse: y\n           Df Sum Sq Mean Sq F value Pr(>F)\nC1          2   0.64 0.31921  0.1297 0.8785\nC2          1   1.84 1.84289  0.7486 0.3883\nC1:C2       2   0.33 0.16577  0.0673 0.9349\nResiduals 144 354.48 2.46168               \n",
        "> ",
        "mt = lm(y~C1*C2,df)",
        "> ",
        "ms = lm(y~C1*C2,df, contrasts=list(C1=\"contr.sum\",C2=\"contr.sum\"))",
        "> ",
        "anova(mt)",
        "Analysis of Variance Table\n\nResponse: y\n           Df  Sum Sq Mean Sq F value  Pr(>F)  \nC1          2   2.087  1.0436  0.5146 0.59881  \nC2          1   5.019  5.0192  2.4752 0.11785  \nC1:C2       2  13.870  6.9350  3.4199 0.03539 *\nResiduals 144 292.005  2.0278                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "anova(ms)",
        "Analysis of Variance Table\n\nResponse: y\n           Df  Sum Sq Mean Sq F value  Pr(>F)  \nC1          2   2.087  1.0436  0.5146 0.59881  \nC2          1   5.019  5.0192  2.4752 0.11785  \nC1:C2       2  13.870  6.9350  3.4199 0.03539 *\nResiduals 144 292.005  2.0278                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "car::Anova(mt, type=3)",
        "Anova Table (Type III tests)\n\nResponse: y\n             Sum Sq  Df F value  Pr(>F)  \n(Intercept)   0.778   1  0.3837 0.53663  \nC1            7.092   2  1.7487 0.17768  \nC2            1.183   1  0.5833 0.44629  \nC1:C2        13.870   2  3.4199 0.03539 *\nResiduals   292.005 144                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "car::Anova(mt, type=1)",
        "Error in match.arg(type) : 'arg' should be one of “II”, “III”, “2”, “3”\n",
        "> ",
        "anova(ms)",
        "Analysis of Variance Table\n\nResponse: y\n           Df  Sum Sq Mean Sq F value  Pr(>F)  \nC1          2   2.087  1.0436  0.5146 0.59881  \nC2          1   5.019  5.0192  2.4752 0.11785  \nC1:C2       2  13.870  6.9350  3.4199 0.03539 *\nResiduals 144 292.005  2.0278                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "car::Anova(ms, type=3)",
        "Anova Table (Type III tests)\n\nResponse: y\n             Sum Sq  Df F value  Pr(>F)  \n(Intercept)   0.508   1  0.2507 0.61736  \nC1            2.087   2  0.5146 0.59881  \nC2            5.019   1  2.4752 0.11785  \nC1:C2        13.870   2  3.4199 0.03539 *\nResiduals   292.005 144                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "anova(mt)",
        "Analysis of Variance Table\n\nResponse: y\n           Df  Sum Sq Mean Sq F value  Pr(>F)  \nC1          2   2.087  1.0436  0.5146 0.59881  \nC2          1   5.019  5.0192  2.4752 0.11785  \nC1:C2       2  13.870  6.9350  3.4199 0.03539 *\nResiduals 144 292.005  2.0278                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "car::Anova(mt, type=3)",
        "Anova Table (Type III tests)\n\nResponse: y\n             Sum Sq  Df F value  Pr(>F)  \n(Intercept)   0.778   1  0.3837 0.53663  \nC1            7.092   2  1.7487 0.17768  \nC2            1.183   1  0.5833 0.44629  \nC1:C2        13.870   2  3.4199 0.03539 *\nResiduals   292.005 144                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "# type 1 is different when sum contrasts",
        "> ",
        "anova(mt)",
        "Analysis of Variance Table\n\nResponse: y\n           Df  Sum Sq Mean Sq F value  Pr(>F)  \nC1          2   2.087  1.0436  0.5146 0.59881  \nC2          1   5.019  5.0192  2.4752 0.11785  \nC1:C2       2  13.870  6.9350  3.4199 0.03539 *\nResiduals 144 292.005  2.0278                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "car::Anova(mt, type=3)",
        "Anova Table (Type III tests)\n\nResponse: y\n             Sum Sq  Df F value  Pr(>F)  \n(Intercept)   0.778   1  0.3837 0.53663  \nC1            7.092   2  1.7487 0.17768  \nC2            1.183   1  0.5833 0.44629  \nC1:C2        13.870   2  3.4199 0.03539 *\nResiduals   292.005 144                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "marginaleffects::avg_comparisons(mt, variables=c(\"C2\"))",
        "\n Term Contrast Estimate Std. Error    z Pr(>|z|)   S   2.5 % 97.5 %\n   C2    e - d    0.366      0.233 1.57    0.116 3.1 -0.0899  0.822\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \n\n",
        "Warning message:\n",
        "In data.table::setDT(modeldata) :",
        "\n ",
        " Some columns are a multi-column type (such as a matrix column): [1]. setDT will retain these columns as-is but subsequent operations like grouping and joining may fail. Please consider as.data.table() instead which will create a new column for each embedded column.\n",
        "> ",
        "anova(ms)",
        "Analysis of Variance Table\n\nResponse: y\n           Df  Sum Sq Mean Sq F value  Pr(>F)  \nC1          2   2.087  1.0436  0.5146 0.59881  \nC2          1   5.019  5.0192  2.4752 0.11785  \nC1:C2       2  13.870  6.9350  3.4199 0.03539 *\nResiduals 144 292.005  2.0278                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "car::Anova(ms, type=3)",
        "Anova Table (Type III tests)\n\nResponse: y\n             Sum Sq  Df F value  Pr(>F)  \n(Intercept)   0.508   1  0.2507 0.61736  \nC1            2.087   2  0.5146 0.59881  \nC2            5.019   1  2.4752 0.11785  \nC1:C2        13.870   2  3.4199 0.03539 *\nResiduals   292.005 144                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "marginaleffects::avg_comparisons(mt, variables=c(\"C2\"))",
        "\n Term Contrast Estimate Std. Error    z Pr(>|z|)   S   2.5 % 97.5 %\n   C2    e - d    0.366      0.233 1.57    0.116 3.1 -0.0899  0.822\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \n\n",
        "Warning message:\n",
        "In data.table::setDT(modeldata) :",
        "\n ",
        " Some columns are a multi-column type (such as a matrix column): [1]. setDT will retain these columns as-is but subsequent operations like grouping and joining may fail. Please consider as.data.table() instead which will create a new column for each embedded column.\n",
        "> ",
        "marginaleffects::avg_comparisons(mt, variables=c(\"C2\"))",
        "\n Term Contrast Estimate Std. Error    z Pr(>|z|)   S   2.5 % 97.5 %\n   C2    e - d    0.366      0.233 1.57    0.116 3.1 -0.0899  0.822\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \n\n",
        "Warning message:\n",
        "In data.table::setDT(modeldata) :",
        "\n ",
        " Some columns are a multi-column type (such as a matrix column): [1]. setDT will retain these columns as-is but subsequent operations like grouping and joining may fail. Please consider as.data.table() instead which will create a new column for each embedded column.\n",
        "> ",
        "marginaleffects::avg_comparisons(ms, variables=c(\"C2\"))",
        "\n Term Contrast Estimate Std. Error    z Pr(>|z|)   S   2.5 % 97.5 %\n   C2    e - d    0.366      0.233 1.57    0.116 3.1 -0.0899  0.822\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \n\n",
        "Warning message:\n",
        "In data.table::setDT(modeldata) :",
        "\n ",
        " Some columns are a multi-column type (such as a matrix column): [1]. setDT will retain these columns as-is but subsequent operations like grouping and joining may fail. Please consider as.data.table() instead which will create a new column for each embedded column.\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(marginaleffects)",
        "> ",
        "# cat cat interactions",
        "> ",
        "",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=500),",
        "+ ",
        "  C2 = rep(letters[4:5],750),",
        "+ ",
        "  lp = model.matrix(rnorm(1500)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(1500)",
        "+ ",
        ")",
        "Error in model.frame.default(object, data, xlev = xlev) : \n  variable lengths differ (found for 'C1')\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(marginaleffects)",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=500),",
        "+ ",
        "  C2 = rep(letters[4:5],750),",
        "+ ",
        "  lp = model.matrix(rnorm(1500)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(1500)",
        "+ ",
        ")",
        "Error in model.frame.default(object, data, xlev = xlev) : \n  variable lengths differ (found for 'C1')\n",
        "> ",
        "rep(letters[1:3],e=500)",
        "   [1] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n  [24] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n  [47] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n  [70] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n  [93] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [116] \"a\" \"a\" \"a\"",
        " \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [139] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [162] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [185] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [208] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [231] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"",
        " \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [254] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [277] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [300] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [323] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [346] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"",
        " \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [369] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [392] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [415] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [438] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [461] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"",
        " \"a\" \"a\" \"a\" \"a\" \"a\"\n [484] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [507] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [530] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [553] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [576] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"",
        "\n [599] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [622] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [645] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [668] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [691] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [714] \"b\" \"b\" \"b\"",
        " \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [737] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [760] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [783] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [806] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [829] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"",
        " \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [852] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [875] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [898] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [921] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [944] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"",
        " \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [967] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [990] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [ reached getOption(\"max.print\") -- omitted 500 entries ]\n",
        "> ",
        "rep(letters[4:5],750)",
        "   [1] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n  [24] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n  [47] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n  [70] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n  [93] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [116] \"e\" \"d\" \"e\"",
        " \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [139] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [162] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [185] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [208] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [231] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"",
        " \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [254] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [277] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [300] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [323] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [346] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"",
        " \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [369] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [392] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [415] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [438] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [461] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"",
        " \"d\" \"e\" \"d\" \"e\" \"d\"\n [484] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [507] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [530] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [553] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [576] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"",
        "\n [599] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [622] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [645] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [668] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [691] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [714] \"e\" \"d\" \"e\"",
        " \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [737] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [760] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [783] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [806] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [829] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"",
        " \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [852] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [875] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [898] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [921] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [944] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"",
        " \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [967] \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\"\n [990] \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\" \"d\" \"e\"\n [ reached getOption(\"max.print\") -- omitted 500 entries ]\n",
        "> ",
        "rep(letters[1:3],e=500)",
        "   [1] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n  [24] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n  [47] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n  [70] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n  [93] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [116] \"a\" \"a\" \"a\"",
        " \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [139] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [162] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [185] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [208] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [231] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"",
        " \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [254] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [277] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [300] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [323] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [346] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"",
        " \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [369] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [392] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [415] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [438] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"\n [461] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\"",
        " \"a\" \"a\" \"a\" \"a\" \"a\"\n [484] \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [507] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [530] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [553] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [576] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"",
        "\n [599] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [622] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [645] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [668] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [691] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [714] \"b\" \"b\" \"b\"",
        " \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [737] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [760] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [783] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [806] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [829] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"",
        " \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [852] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [875] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [898] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [921] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [944] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"",
        " \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [967] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [990] \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\"\n [ reached getOption(\"max.print\") -- omitted 500 entries ]\n",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=500),",
        "+ ",
        "  C2 = rep(letters[4:5],750),",
        "+ ",
        "  #lp = model.matrix(rnorm(1500)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  #y = lp + rnorm(1500)",
        "+ ",
        ")",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=500),",
        "+ ",
        "  C2 = rep(letters[4:5],750),",
        "+ ",
        "  lp = model.matrix(rnorm(1500)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  #y = lp + rnorm(1500)",
        "+ ",
        ")",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=500),",
        "+ ",
        "  C2 = rep(letters[4:5],750),",
        "+ ",
        "  lp = model.matrix(rnorm(1500)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(1500)",
        "+ ",
        ")",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(marginaleffects)",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=500),",
        "+ ",
        "  C2 = rep(letters[4:5],750),",
        "+ ",
        "  lp = model.matrix(rnorm(1500)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(1500)",
        "+ ",
        ")",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "# unbalanced",
        "> ",
        "udf = tibble(",
        "+ ",
        "  C1 = sample(letters[1:3],1500,T,prob=c(.4,.4,.2)),",
        "+ ",
        "  C2 = sample(letters[4:5],1500,T),",
        "+ ",
        "  lp = model.matrix(rnorm(1500)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(1500)",
        "+ ",
        ")",
        "> ",
        "ggplot(udf,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "mt = lm(y~C1*C2,df)",
        "> ",
        "ms = lm(y~C1*C2,df, contrasts=list(C1=\"contr.sum\",C2=\"contr.sum\"))",
        "> ",
        "# type 1 is different when sum contrasts",
        "> ",
        "anova(mt)",
        "Analysis of Variance Table\n\nResponse: y\n            Df  Sum Sq Mean Sq   F value Pr(>F)    \nC1           2    0.64    0.32    0.3252 0.7224    \nC2           1 1536.89 1536.89 1564.2035 <2e-16 ***\nC1:C2        2 1012.71  506.36  515.3572 <2e-16 ***\nResiduals 1494 1467.91    0.98                     \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "car::Anova(mt, type=3)",
        "Anova Table (Type III tests)\n\nResponse: y\n             Sum Sq   Df  F value Pr(>F)    \n(Intercept)    0.85    1   0.8643 0.3527    \nC1           481.32    2 244.9377 <2e-16 ***\nC2             0.07    1   0.0693 0.7924    \nC1:C2       1012.71    2 515.3572 <2e-16 ***\nResiduals   1467.91 1494                    \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "# type 1 v type 3 are different when treatment contrasts",
        "> ",
        "anova(mt)",
        "Analysis of Variance Table\n\nResponse: y\n            Df  Sum Sq Mean Sq   F value Pr(>F)    \nC1           2    0.64    0.32    0.3252 0.7224    \nC2           1 1536.89 1536.89 1564.2035 <2e-16 ***\nC1:C2        2 1012.71  506.36  515.3572 <2e-16 ***\nResiduals 1494 1467.91    0.98                     \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "car::Anova(mt, type=3)",
        "Anova Table (Type III tests)\n\nResponse: y\n             Sum Sq   Df  F value Pr(>F)    \n(Intercept)    0.85    1   0.8643 0.3527    \nC1           481.32    2 244.9377 <2e-16 ***\nC2             0.07    1   0.0693 0.7924    \nC1:C2       1012.71    2 515.3572 <2e-16 ***\nResiduals   1467.91 1494                    \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "# the same when sum contrasts",
        "> ",
        "anova(ms)",
        "Analysis of Variance Table\n\nResponse: y\n            Df  Sum Sq Mean Sq   F value Pr(>F)    \nC1           2    0.64    0.32    0.3252 0.7224    \nC2           1 1536.89 1536.89 1564.2035 <2e-16 ***\nC1:C2        2 1012.71  506.36  515.3572 <2e-16 ***\nResiduals 1494 1467.91    0.98                     \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "car::Anova(ms, type=3)",
        "Anova Table (Type III tests)\n\nResponse: y\n             Sum Sq   Df   F value Pr(>F)    \n(Intercept)    2.80    1    2.8496 0.0916 .  \nC1             0.64    2    0.3252 0.7224    \nC2          1536.89    1 1564.2035 <2e-16 ***\nC1:C2       1012.71    2  515.3572 <2e-16 ***\nResiduals   1467.91 1494                     \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "marginaleffects::avg_comparisons(ms, variables=c(\"C2\"))",
        "\n Term Contrast Estimate Std. Error     z Pr(>|z|)   S 2.5 % 97.5 %\n   C2    e - d    -2.02     0.0512 -39.6   <0.001 Inf -2.12  -1.92\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \n\n",
        "Warning message:\n",
        "In data.table::setDT(modeldata) :",
        "\n ",
        " Some columns are a multi-column type (such as a matrix column): [1]. setDT will retain these columns as-is but subsequent operations like grouping and joining may fail. Please consider as.data.table() instead which will create a new column for each embedded column.\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(marginaleffects)",
        "> ",
        "# cat cat interactions",
        "> ",
        "",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "Error in model.frame.default(object, data, xlev = xlev) : \n  variable lengths differ (found for 'C1')\n",
        "> ",
        "> ",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(marginaleffects)",
        "> ",
        "# cat cat interactions",
        "> ",
        "",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "Error in model.frame.default(object, data, xlev = xlev) : \n  variable lengths differ (found for 'C1')\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(marginaleffects)",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "Error in model.frame.default(object, data, xlev = xlev) : \n  variable lengths differ (found for 'C1')\n",
        "> ",
        "ggplot(df,aes(x=C1,y=lp,col=C2))+",
        "+ ",
        "  stat_summary(geom=\"point\",position=position_dodge(width=.2),size=4)",
        "\u001B[38;5;254mNo summary function supplied, defaulting to `mean_se()`\u001B[39m\n",
        "> ",
        "# balanced",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "Error in model.frame.default(object, data, xlev = xlev) : \n  variable lengths differ (found for 'C1')\n",
        "> ",
        "df = tibble(",
        "+ ",
        "  C1 = rep(letters[1:3],e=50),",
        "+ ",
        "  C2 = rep(letters[4:5],75),",
        "+ ",
        "  lp = model.matrix(rnorm(150)~C1*C2,df)%*%c(0,1,2,0,-2,-4),",
        "+ ",
        "  y = lp + rnorm(150)",
        "+ ",
        ")",
        "Error in model.frame.default(object, data, xlev = xlev) : \n  variable lengths differ (found for 'C1')\n",
        "\nRestarting R session...\n\n"
    ]
}