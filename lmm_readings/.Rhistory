geom_smooth(method=lm,se=F,fullrange=T)+
geom_point(data=hrdat,inherit.aes=F,
aes(y=HR,x=hrs_sleepC,col=smoke),
size=3,alpha=.2)+
geom_point(x=0,y=coef(eg2mod_cent)[1], size=4, col="red")+
geom_point(x=0,y=sum(coef(eg2mod_cent)[c(1,3)]), size=4, col="blue")+
geom_segment(x=0,xend=0,y=coef(eg2mod_cent)[1], yend=sum(coef(eg2mod_cent)[c(1,3)]), lty="dotted", lwd=1,col="black") + labs(title="Mean Centered X") +
plot_layout(guides="collect")
#| out-width: "100%"
#| echo: false
hrdat <- hrdat %>%
mutate(
smoke = ifelse(smoke %in% c("v","y"),"y","n"),
hrs_sleepC = hrs_sleep - mean(hrs_sleep)
)
eg2mod <- lm(HR ~ hrs_sleep * smoke, data = hrdat)
eg2mod_cent <- lm(HR ~ hrs_sleepC * smoke, data = hrdat)
as.data.frame(effects::effect("hrs_sleep*smoke",eg2mod,
xlevels=list(hrs_sleep=0:15))) |>
ggplot(aes(x=hrs_sleep,col=smoke,fill=smoke,
y=fit,ymin=lower,ymax=upper))+
geom_ribbon(alpha=.1,col=NA)+
geom_smooth(method=lm,se=F,fullrange=T)+
geom_point(data=hrdat,inherit.aes=F,
aes(y=HR,x=hrs_sleep,col=smoke),
size=3,alpha=.2)+
geom_point(x=0,y=coef(eg2mod)[1], size=4, col="red")+
geom_point(x=0,y=sum(coef(eg2mod)[c(1,3)]), size=4, col="blue")+
geom_segment(x=0,xend=0,y=coef(eg2mod)[1], yend=sum(coef(eg2mod)[c(1,3)]), lty="dotted", lwd=1,col="black") + labs(title="Original X") +
as.data.frame(effects::effect("hrs_sleepC*smoke",eg2mod_cent,
xlevels=list(hrs_sleepC=(0:15)-mean(hrdat$hrs_sleep)))) |>
ggplot(aes(x=hrs_sleepC,col=smoke,fill=smoke,
y=fit,ymin=lower,ymax=upper))+
geom_ribbon(alpha=.1,col=NA)+
geom_smooth(method=lm,se=F,fullrange=T)+
geom_point(data=hrdat,inherit.aes=F,
aes(y=HR,x=hrs_sleepC,col=smoke),
size=3,alpha=.2)+
geom_point(x=0,y=coef(eg2mod_cent)[1], size=4, col="red")+
geom_point(x=0,y=sum(coef(eg2mod_cent)[c(1,3)]), size=4, col="blue")+
geom_segment(x=0,xend=0,y=coef(eg2mod_cent)[1], yend=sum(coef(eg2mod_cent)[c(1,3)]), lty="dotted", lwd=1,col="black") + labs(title="Mean Centered X") +
plot_layout(guides="collect")
as.data.frame(effects::effect("hrs_sleep*smoke",eg2mod,
xlevels=list(hrs_sleep=0:15))) |>
ggplot(aes(x=hrs_sleep,col=smoke,fill=smoke,
y=fit,ymin=lower,ymax=upper))+
geom_ribbon(alpha=.1,col=NA)+
geom_smooth(method=lm,se=F,fullrange=T)+
geom_point(data=hrdat,inherit.aes=F,
aes(y=HR,x=hrs_sleep,col=smoke),
size=3,alpha=.2)+
geom_point(x=0,y=coef(eg2mod)[1], size=4, aes(col="n"))+
geom_point(x=0,y=sum(coef(eg2mod)[c(1,3)]), size=4, aes(col="y"))+
geom_segment(x=0,xend=0,y=coef(eg2mod)[1], yend=sum(coef(eg2mod)[c(1,3)]), lty="dotted", lwd=1,col="black") + labs(title="Original X")
#| out-width: "100%"
#| echo: false
hrdat <- hrdat %>%
mutate(
smoke = ifelse(smoke %in% c("v","y"),"y","n"),
hrs_sleepC = hrs_sleep - mean(hrs_sleep)
)
eg2mod <- lm(HR ~ hrs_sleep * smoke, data = hrdat)
eg2mod_cent <- lm(HR ~ hrs_sleepC * smoke, data = hrdat)
as.data.frame(effects::effect("hrs_sleep*smoke",eg2mod,
xlevels=list(hrs_sleep=0:15))) |>
ggplot(aes(x=hrs_sleep,col=smoke,fill=smoke,
y=fit,ymin=lower,ymax=upper))+
geom_ribbon(alpha=.1,col=NA)+
geom_smooth(method=lm,se=F,fullrange=T)+
geom_point(data=hrdat,inherit.aes=F,
aes(y=HR,x=hrs_sleep,col=smoke),
size=3,alpha=.2)+
geom_point(x=0,y=coef(eg2mod)[1], size=4, aes(col="n"))+
geom_point(x=0,y=sum(coef(eg2mod)[c(1,3)]), size=4, aes(col="y"))+
geom_segment(x=0,xend=0,y=coef(eg2mod)[1], yend=sum(coef(eg2mod)[c(1,3)]), lty="dotted", lwd=1,col="black") + labs(title="Original X") +
as.data.frame(effects::effect("hrs_sleepC*smoke",eg2mod_cent,
xlevels=list(hrs_sleepC=(0:15)-mean(hrdat$hrs_sleep)))) |>
ggplot(aes(x=hrs_sleepC,col=smoke,fill=smoke,
y=fit,ymin=lower,ymax=upper))+
geom_ribbon(alpha=.1,col=NA)+
geom_smooth(method=lm,se=F,fullrange=T)+
geom_point(data=hrdat,inherit.aes=F,
aes(y=HR,x=hrs_sleepC,col=smoke),
size=3,alpha=.2)+
geom_point(x=0,y=coef(eg2mod_cent)[1], size=4, aes(col="n"))+
geom_point(x=0,y=sum(coef(eg2mod_cent)[c(1,3)]), size=4, aes(col="y"))+
geom_segment(x=0,xend=0,y=coef(eg2mod_cent)[1], yend=sum(coef(eg2mod_cent)[c(1,3)]), lty="dotted", lwd=1,col="black") + labs(title="Mean Centered X") +
plot_layout(guides="collect")
junk::sim_basicrs
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
x = rep(1:(N/ngroups),n_groups)
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
x = rep(1:(N/n_groups),n_groups)
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
x = rep(0:(N/n_groups),n_groups)
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
x = rep(1:(N/n_groups),n_groups)-1
re0 = rnorm(n_groups, sd = z0)
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
x = rep(1:(N/n_groups),n_groups)-1
re0 = rnorm(n_groups, sd = 1)
re = re0[g]
rex = rnorm(n_groups, sd = 1)
re_x = rex[g]
lp = (65 + re) + (0 + re_x) * x
y = rnorm(N, mean = lp, sd = e)
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
x = rep(1:(N/n_groups),n_groups)-1
re0 = rnorm(n_groups, sd = 1)
re = re0[g]
rex = rnorm(n_groups, sd = 1)
re_x = rex[g]
lp = (65 + re) + (0 + re_x) * x
y = rnorm(N, mean = lp, sd = 1)
data.frame(year=x,student=factor(g),grade=y)
ggplot(df,aes(x=year,y=grade,group=student))+
geom_line()
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
x = rep(1:(N/n_groups),n_groups)-1
re0 = rnorm(n_groups, sd = 1)
re = re0[g]
rex = rnorm(n_groups, sd = 1)
re_x = rex[g]
lp = (65 + re) + (0 + re_x) * x
y = rnorm(N, mean = lp, sd = 1)
df=data.frame(year=x,student=factor(g),grade=y)
ggplot(df,aes(x=year,y=grade,group=student))+
geom_line()
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
x = rep(1:(N/n_groups),n_groups)-1
re0 = rnorm(n_groups, sd = 1)
re = re0[g]
rex = rnorm(n_groups, sd = .3)
re_x = rex[g]
lp = (65 + re) + (0 + re_x) * x
y = rnorm(N, mean = lp, sd = 1)
df=data.frame(year=x,student=factor(g),grade=y)
ggplot(df,aes(x=year,y=grade,group=student))+
geom_line()
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
x = rep(1:(N/n_groups),n_groups)-1
re0 = rnorm(n_groups, sd = 1)
re = re0[g]
rex = rnorm(n_groups, sd = .4)
re_x = rex[g]
lp = (65 + re) + (0 + re_x) * x
y = rnorm(N, mean = lp, sd = 1)
df=data.frame(year=x,student=factor(g),grade=y)
ggplot(df,aes(x=year,y=grade,group=student))+
geom_line()
ggplot(df,aes(x=year+2020,y=grade,group=student))+
geom_line()
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
x = rep(1:(N/n_groups),n_groups)-1
re0 = rnorm(n_groups, sd = 1)
re = re0[g]
rex = rnorm(n_groups, sd = .4)
re_x = rex[g]
lp = (65 + re) + (0 + re_x) * x
y = rnorm(N, mean = lp, sd = 1)
df=data.frame(year=x+2015,student=factor(g),grade=y)
ggplot(df,aes(x=year,y=grade,group=student))+
geom_line()
ggplot(df,aes(x=year,y=grade,group=student))+
geom_line()+
scale_x_continuous(breaks=2015:2023)
ggplot(df,aes(x=year,y=grade,group=student))+
geom_line()+
scale_x_continuous(breaks=2015:2024)
ggplot(df,aes(x=year,y=grade,group=dept))+
geom_line()+
scale_x_continuous(breaks=2015:2024)+
gghighlight::gghighlight(label_key=dept)
library(gghighlight)
ggplot(df,aes(x=year,y=grade,group=dept))+
geom_line()+
scale_x_continuous(breaks=2015:2024)+
gghighlight(label_key=dept)
library(gghighlight)
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
x = rep(1:(N/n_groups),n_groups)-1
re0 = rnorm(n_groups, sd = 1)
re = re0[g]
rex = rnorm(n_groups, sd = .4)
re_x = rex[g]
lp = (65 + re) + (0 + re_x) * x
y = rnorm(N, mean = lp, sd = 1)
df=data.frame(year=x+2015,dept=factor(g),grade=y)
ggplot(df,aes(x=year,y=grade,group=dept))+
geom_line()+
scale_x_continuous(breaks=2015:2024)+
gghighlight(label_key=dept)
levels(df$dept)
N = 100
n_groups = 10
g = rep(1:n_groups, e = N/n_groups)
x = rep(1:(N/n_groups),n_groups)-1
re0 = rnorm(n_groups, sd = 1)
re = re0[g]
rex = rnorm(n_groups, sd = .4)
re_x = rex[g]
lp = (65 + re) + (0 + re_x) * x
y = rnorm(N, mean = lp, sd = 1)
df=data.frame(year=x+2015,dept=factor(g),grade=y)
levels(df$dept)
library(gghighlight)
N = 100
n_groups = 10
g = rep(1:n_groups, e = N/n_groups)
x = rep(1:(N/n_groups),n_groups)-1
re0 = rnorm(n_groups, sd = 1)
re = re0[g]
rex = rnorm(n_groups, sd = .4)
re_x = rex[g]
lp = (65 + re) + (0 + re_x) * x
y = rnorm(N, mean = lp, sd = 1)
df=data.frame(year=x+2015,dept=factor(g),grade=y)
levels(df$dept) <- c("english","history","maths","engineering","art","philosophy","sociology","computer_science","french","spanish")
ggplot(df,aes(x=year,y=grade,group=dept))+
geom_line()+
scale_x_continuous(breaks=2015:2024)+
gghighlight(label_key=dept)
ggplot(df,aes(x=year,y=grade,group=dept))+
geom_line()+
scale_x_continuous(breaks=2015:2025)+
gghighlight(label_key=dept)
ggplot(df,aes(x=year,y=grade,group=dept))+
geom_line()+
scale_x_continuous(limits=c(2015,2025),breaks=2015:2024)+
gghighlight(label_key=dept)
ggplot(df,aes(x=year,y=grade,group=dept))+
geom_line()+
scale_x_continuous(limits=c(2015,2025),breaks=2015:2024)+
gghighlight(label_key=dept,hjust=-1)
ggplot(df,aes(x=year,y=grade,col=dept))+
geom_line()+
scale_x_continuous(limits=c(2015,2025),breaks=2015:2024)+
gghighlight(label_key=dept,hjust=-1)
ggplot(df,aes(x=year,y=grade,col=dept))+
geom_line()+
scale_x_continuous(limits=c(2015,2025),breaks=2015:2024)+
gghighlight(label_key=dept)
ggplot(df,aes(x=year,y=grade,col=dept))+
geom_line()+
scale_x_continuous(limits=c(2015,2025),breaks=2015:2024)+
ylim(50,80)+
gghighlight(label_key=dept)
ggplot(df,aes(x=year,y=grade,col=dept))+
geom_point(alpha=.2,size=3)+
geom_line()+
scale_x_continuous(limits=c(2015,2025),breaks=2015:2024)+
ylim(50,80)+
gghighlight(label_key=dept)
ggplot(df,aes(x=year,y=grade,col=dept))+
geom_line()+
scale_x_continuous(limits=c(0,2025),breaks=c(0,2010,2020))
ggplot(df,aes(x=year,y=grade,col=dept))+
geom_point(alpha=.2,size=3)+
geom_line()+
guides(col="none")+
scale_x_continuous(limits=c(2015,2025),breaks=2015:2024)+
ylim(50,80)+
gghighlight(label_key=dept)
ggplot(df,aes(x=year,y=grade,col=dept))+
geom_line()+
scale_x_continuous(limits=c(0n,2025),breaks=c(0,2010,2020))+
ggplot(df,aes(x=year,y=grade,col=dept))+
geom_line()+
scale_x_continuous(limits=c(0,2025),breaks=c(0,2010,2020))+
ylim(50,80)
ggplot(df,aes(x=year,y=grade,col=dept))+
geom_point(alpha=.2,size=3)+
geom_line()+
scale_x_continuous(limits=c(0,2025),breaks=c(0,2010,2020))+
ylim(50,80)
mmd <- read_csv("https://uoepsy.github.io/data/msmr_mindfuldecline.csv")
head(mmd)
mod1 <- lmer(ACE ~ 1 + age +
(1 + age | ppt),
data = mmd)
mod1 <- lmer(ACE ~ 1 + age +
(1 | ppt),
data = mmd)
summary(mod1)
#| label: fig-centconv
#| fig-cap: "lines indicate predicted values from the model with random intercepts and random slopes of age. Due to how age is coded, the 'intercept' is estimated back at age 0"
#| echo: false
mmd <- read_csv("https://uoepsy.github.io/data/msmr_mindfuldecline.csv")
mod1 <- lmer(ACE ~ 1 + age +
(1 | ppt),
data = mmd)
broom.mixed::augment(mod1) |>
ggplot(aes(x=age,group=ppt))+
geom_point(aes(y=ACE))+
stat_smooth(geom="line",method=lm,se=F,fullrange=T,
alpha=.4,
aes(y=.fitted))+
xlim(0,78)
#| label: fig-centconv
#| fig-cap: "lines indicate predicted values from the model with random intercepts and random slopes of age. Due to how age is coded, the 'intercept' is estimated back at age 0"
#| echo: false
mmd <- read_csv("https://uoepsy.github.io/data/msmr_mindfuldecline.csv")
mod1 <- lmer(ACE ~ 1 + age +
(1 +age| ppt),
data = mmd)
broom.mixed::augment(mod1) |>
ggplot(aes(x=age,group=ppt))+
geom_point(aes(y=ACE))+
stat_smooth(geom="line",method=lm,se=F,fullrange=T,
alpha=.4,
aes(y=.fitted))+
xlim(0,78)
VarCorr(mod1)
source('assets/setup.R')
library(tidyverse)
library(patchwork)
library(effects)
ourdata <- c("H","H","T","T","T","T","T","T")
?optim
fr <- function(p){
dbinom(2,8,prob=p)
}
optim(par=c(0), fr)
optim(par=c(.5), fr)
fr <- function(p){
dbinom(2,8,prob=p)
}
optim(par=c(.5), fr)
optim(par=c(.5), lower=0,upper=1, fr)
fr <- function(p){
-2*dbinom(2,8,prob=p)
}
optim(par=c(.5), lower=0,upper=1, fr)
ourdata <- c("H","H","T","T","T","T","T","T")
fr <- function(p){
-2*log(dbinom(2,8,prob=p))
}
optim(par=c(.5), lower=0,upper=1, fr)
fr <- function(p){
-2*log(dbinom(2,8,prob=p))
}
optim(par=c(.5),fr)
optim(fr)
optim(par=0,fr)
optim(par=0.5,fr)
library(lme4)
df=readr::read_csv("C:/Documents and Settings/jking34/Downloads/sing.csv")
m0 = lmer(y ~ A * B * C + (A * B * C  | group), data = df)
VarCorr(m0)
# 4 components captures everything
summary(rePCA(m0))
m1 <- lmer(y ~ A * B * C + (A * B * C || group), data = df)
# little to no variance in interactions
VarCorr(m1)
m2 <- lmer(y ~ A * B * C + (A + B + C | group), data = df)
library(buildmer)
buildmer(y ~ A * B * C + (1 + A * B * C | group), data = df,
buildmerControl=buildmerControl(direction="backward"))
buildmer(y ~ A * B * C + (1 + A | group), data = df,
buildmerControl=buildmerControl(direction="forward"))
buildmer(y ~ A * B * C + (1 + A | group), data = df,
buildmerControl=buildmerControl(direction=c("forward","order")))
m1 = buildmer(y ~ A * B * C + (1 + A * B * C | group), data = df,
buildmerControl=buildmerControl(direction="backward", ddf = "Satterthwaite"))
m1 = buildmer(y ~ A * B * C + (1 + A * B * C | group), data = df,
buildmerControl=buildmerControl(direction="backward"))
formula(m1)
m1a = buildmer(y ~ C * B * A + (1 + C * B * A | group), data = df,
buildmerControl=buildmerControl(direction="backward"))
formula(m1a)
m1b = buildmer(y ~ B * A * C + (1 + B * A * C | group), data = df,
buildmerControl=buildmerControl(direction="backward"))
formula(m1)
formula(m1a)
formula(m1b)
df$rr = rnorm(nrow(df))
df$rr = rnorm(nrow(df))
m1 = buildmer(y ~ A * B * C  + rr + (1 + A * B * C + rr | group), data = df,
buildmerControl=buildmerControl(direction="backward"))
m2 = buildmer(y ~ A * B * C + rr + (1 + A * B * C + rr| group), data = df,
buildmerControl=buildmerControl(direction="order"))
formula(m1)
formula(m2)
summary(m2)
anova(m2, update(m2,~.-rr))
update(m2,~.-rr)
anova(update(m2,~.-rr), m2)
anova(update(m2,~.-rr), m2, test="Chisq")
m3=update(m2,~.-rr)
anova(m2,m3)
stats::anova(m2,m3)
lmer(formula(m2))
lmer(formula(m2),df)
anova(lmer(formula(m2),df), update(lmer(formula(m2),df),~.-rr)
)
library(tidyverse)
bnt = read_csv("https://uoepsy.github.io/data/bntmono.csv")
bnt <- bnt %>% mutate(across(c(mlhome, school_id, child_id), factor))
bntm0 <- lmer(BNT60 ~ schoolyear * mlhome + (1 | school_id) + (1 | school_id:child_id), data = bnt)
bntm0
m = buildmer(
BNT60 ~ schoolyear * mlhome + (1 + schoolyear*mlhome| school_id) + (1 +schoolyear| school_id:child_id),
data = bnt,
buildmerControl=buildmerControl(direction="order"))
formula(m)
?convergence
?isSingular
rnorm(100,165,12)/1000
var(rnorm(100,165,12)/1000)
140
.165/1000
df=junk::sim_basicrs()
lmer(y~1+x+(1+x|g),df) |> summary()
lmer(y~1+I(x/100)+(1+I(x/100)|g),df) |> summary()
df$x2 = df$x/100
df
lmer(y~1+x2+(1+x2|g),df) |> summary()
df$x2 = df$x*1000
lmer(y~1+x2+(1+x2|g),df) |> summary()
df$y2 = df$y*1000
lmer(y2~1+x2+(1+x2|g),df) |> summary()
lmer(y~1+x2+(1+x2|g),df) |> summary()
df$x2 = df$x/10000
lmer(y~1+x2+(1+x2|g),df) |> summary()
tibble(
height = rnorm(100,165,10),
shoe_size = scale(rnorm(100,height*.3,1))[,1]*3+2
)
tibble(
height = rnorm(100,165,10),
shoe_size = scale(rnorm(100,height*.3,1))[,1]*2+6
)
tibble(
height = rnorm(100,165,10),
ss = scale(rnorm(100,height*.3,1))[,1]*2+6,
shoe_size = round(ss*2)/2
)
height/100
tibble(
height = rnorm(100,165,10),
ss = scale(rnorm(100,height*.3,1))[,1]*2+6,
height_mm = height*10,
height_km = (height/100)/1000,
shoe_size = round(ss*2)/2
)
140/100
(140/100)/1000
lm(shoe_size ~ height_mm, df) |> summary()
df = tibble(
height = rnorm(100,165,10),
ss = scale(rnorm(100,height*.3,1))[,1]*2+6,
height_mm = height*10,
height_km = (height/100)/1000,
shoe_size = round(ss*2)/2
)
lm(shoe_size ~ height_mm, df) |> summary()
lm(shoe_size ~ height_km, df) |> summary()
lm(shoe_size ~ height_mm, df) |> summary()
lm(shoe_size ~ height_km, df) |> summary()
df=junk::sim_basicrs()
lmer(y~1+x+(1+x|g),df) |> summary()
lmer(y~1+I(x/100)+(1+I(x/100)|g),df) |> summary()
2000/(100*1000)
df = tibble(
height = rnorm(100,165,10),
ss = scale(rnorm(100,height*.3,1))[,1]*2+6,
height_mm = height*10,
height_km = (height/100)/1000,
shoe_size = round(ss*2)/2
)
lm(shoe_size ~ height_mm, df) |> summary()
lm(shoe_size ~ height_km, df) |> summary()
lm(shoe_size ~ height_mm, df) |> summary()
df = tibble(
height = rnorm(100,165,10),
ss = scale(rnorm(100,height*.1,1))[,1]*2+6,
height_mm = height*10,
height_km = (height/100)/1000,
shoe_size = round(ss*2)/2
)
lm(shoe_size ~ height_mm, df) |> summary()
lm(shoe_size ~ height_km, df) |> summary()
100*100
100*1000
lmer(y~1+I(x/100)+(1+I(x/100)|g),df) |> summary()
df=junk::sim_basicrs()
df$x2/10000
df$x2 = df$x/10000
lmer(y~1+x2+(1+x2|g),df) |> summary()
head(df)
