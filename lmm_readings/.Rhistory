gt::gt()
broom.mixed::tidy(wbmod) |>
filter(effect=="fixed") |>
transmute(term,est=round(estimate,2),
SE=round(std.error,2),
t = round(statistic,2)) |>
gt::gt()
#| echo: false
rsmod <- lmer(self_concept ~ grade +
(1 + grade|class),
data = bfdat)
broom.mixed::tidy(rsmod) |>
filter(effect=="fixed") |>
transmute(term,est=round(estimate,2),
SE=round(std.error,2),
t = round(statistic,2)) |>
gt::gt()
rsmod <- lmer(self_concept ~ grade + (1 + grade | class),
data = bfdat)
#| echo: false
.pp(summary(rsmod),l=list(c(9:12)))
#| echo: false
.pp(summary(rsmod),l=list(c(6:12)))
#| echo: false
.pp(summary(rsmod),l=list(c(13:16)))
.pp(summary(rsmod),l=list(c(18:22)))
#| echo: false
rsmod <- lmer(self_concept ~ grade + (1 + grade | class),
data = bfdat)
.pp(summary(rsmod),l=list(c(18:22)))
round(fixef(rsmod)[2],2)
bfdat |> count(class)
.69*.1
.69*(1/9)
2.93/3.11
3.11/2.93
1-(2.93/3.11)
.69*10
69+1
70/10
ff = fixef(wbmod)[3]
ff
((ff*10)+1)/10
ff-((ff*10)+1)/10
bfdat[1,]
bfdat[1, ]
bfdat[1, ]
bfdat[1, ] |> select(class, child, grade, grade_avg, grade_dev)
#| echo: false
bfdat[1, ] |> transmute(class="i", child="j", grade, grade_avg, grade_dev, self_concept="?")
#| echo: false
bind_rows(
bfdat[1, ] |> transmute(class="i", child="j",
grade, grade_avg, grade_dev, self_concept="?"),
bfdat[1, ] |> transmute(class="i", child="j",
grade+1, grade_avg+1, grade_dev, self_concept="? + ")
)
#| echo: false
bind_rows(
bfdat[1, ] |> transmute(class="i", child="j",
grade, grade_avg, grade_dev, self_concept="?"),
bfdat[1, ] |> transmute(class="i", child="j",
grade=grade+1, grade_avg=grade_avg+1, grade_dev, self_concept="? + ")
)
fixef(wbmod)[3]
round(fixef(wbmod)[3],2)
paste0("?", round(fixef(wbmod)[3],2))
paste0("? ", round(fixef(wbmod)[3],2))
#| echo: false
bind_rows(
bfdat[1, ] |> transmute(class="i", child="j",
grade, grade_avg, grade_dev, self_concept="?"),
bfdat[1, ] |> transmute(class="i", child="j",
grade=grade+1, grade_avg=grade_avg+1, grade_dev,
self_concept=paste0("? ", round(fixef(wbmod)[3],2)))
)
#| echo: false
bfdat[1, ] |> transmute(class="i", child="j", grade_avg, grade_dev, self_concept="?")
#| echo: false
bind_rows(
bfdat[1, ] |> transmute(class="i", child="j",
grade_avg, grade_dev, self_concept="?"),
bfdat[1, ] |> transmute(class="i", child="j",
grade_avg=grade_avg+1, grade_dev,
self_concept=paste0("? ", round(fixef(wbmod)[3],2)))
)
#| echo: false
bind_rows(
bfdat[1, ] |> transmute(class="i", child="j",
grade_avg, grade, self_concept="?"),
bfdat[1, ] |> transmute(class="i", child="j",
grade_avg=grade_avg+1, grade,
self_concept=paste0("? ", round(fixef(mlakmod)[3],2)))
)
#| echo: false
bind_rows(
bfdat[1, ] |> transmute(class="i", child="j",
grade_avg, grade_dev, grade, self_concept="?"),
bfdat[1, ] |> transmute(class="i", child="j",
grade_avg=grade_avg+1, grade_dev, grade=grade+1,
self_concept=paste0("? ", round(fixef(wbmod)[3],2)))
)
#| echo: false
bind_rows(
bfdat[1, ] |> transmute(class="i", child="j",
grade_avg, grade, self_concept="?"),
bfdat[1, ] |> transmute(class="i", child="j",
grade_avg=grade_avg+1, grade,
self_concept=paste0("? ", round(fixef(mlakmod)[3],2)))
)
#| echo: false
bind_rows(
bfdat[1, ] |> transmute(class="i", child="j",
grade_avg, grade, self_concept="?"),
bfdat[1, ] |> transmute(class="i", child="j",
grade_avg=grade_avg+1, grade,
self_concept=paste0("? ", round(fixef(mlakmod)[3],2)))
)
ccc = bfdat[1,] |> mutate(
fit = predict(wbmod,newdata=bfdat[1,]),
wbfit = fit + fixef(wbmod)[3],
mufit = fit + fixef(mlakmod)[3],
)
cfact =
bind_rows(
bfdat |> filter(class==1) |> mutate(c="actual"),
bfdat |> filter(class==1) |>
mutate(grade=grade+1,grade_avg=grade_avg+1,c="counterfactual")
)
cfact$.fitted = predict(wbmod,newdata=cfact)
cfact$.fitted[11:20]-cfact$.fitted[1:10]
broom.mixed::augment(wbmod) |>
mutate(grade=grade_avg+grade_dev) |>
ggplot(aes(x=grade,y=.fitted,group=class))+
geom_line(alpha=.3)+
geom_point(aes(y=self_concept),alpha=.1) +
geom_line(data=cfact,aes(col=c,group=interaction(c,class)),lwd=1) +
geom_point(data=cfact,aes(y=self_concept,col=c), alpha=.6) +
geom_point(data=ccc, aes(y=fit),col="red",size=3)+
geom_point(data=ccc, aes(x=grade+1,y=wbfit),col="blue",size=3)+
theme(legend.position = "bottom")
cfact2 =
bind_rows(
bfdat |> filter(class==1) |> mutate(c="actual"),
bfdat |> filter(class==1) |>
mutate(grade=grade+1,grade_avg=grade_avg+1,c="counterfactual")
)
cfact2$.fitted = predict(mlakmod,newdata=cfact2)
cfact2$.fitted[11:20]-cfact2$.fitted[1:10]
broom.mixed::augment(mlakmod) |>
ggplot(aes(x=grade,y=.fitted,group=class))+
geom_line(alpha=.3)+
geom_point(aes(y=self_concept),alpha=.1) +
geom_line(data=cfact2,aes(col=c,group=interaction(c,class)),lwd=1) +
geom_point(data=cfact2,aes(y=self_concept,col=c), alpha=.6) +
geom_point(data=ccc, aes(y=fit),col="red",size=3)+
geom_point(data=ccc, aes(y=mufit),col="blue",size=3)+
theme(legend.position = "bottom")
ccc = bfdat[1,] |> mutate(
fit = predict(wbmod,newdata=bfdat[1,]),
wbfit = fit + fixef(wbmod)[3],
mufit = fit + fixef(mlakmod)[3],
)
cfact =
bind_rows(
bfdat |> filter(class==1) |> mutate(c="actual"),
bfdat |> filter(class==1) |>
mutate(grade=grade+1,grade_avg=grade_avg+1,c="counterfactual")
)
cfact$.fitted = predict(wbmod,newdata=cfact)
cfact$.fitted[11:20]-cfact$.fitted[1:10]
plotwb = broom.mixed::augment(wbmod) |>
mutate(grade=grade_avg+grade_dev) |>
ggplot(aes(x=grade,y=.fitted,group=class))+
geom_line(alpha=.3)+
geom_point(aes(y=self_concept),alpha=.1) +
geom_line(data=cfact,aes(col=c,group=interaction(c,class)),lwd=1) +
geom_point(data=cfact,aes(y=self_concept,col=c), alpha=.6) +
geom_point(data=ccc, aes(y=fit),col="red",size=3)+
geom_point(data=ccc, aes(x=grade+1,y=wbfit),col="blue",size=3)+
theme(legend.position = "bottom")
cfact2 =
bind_rows(
bfdat |> filter(class==1) |> mutate(c="actual"),
bfdat |> filter(class==1) |>
mutate(grade=grade+1,grade_avg=grade_avg+1,c="counterfactual")
)
cfact2$.fitted = predict(mlakmod,newdata=cfact2)
cfact2$.fitted[11:20]-cfact2$.fitted[1:10]
plotmu = broom.mixed::augment(mlakmod) |>
ggplot(aes(x=grade,y=.fitted,group=class))+
geom_line(alpha=.3)+
geom_point(aes(y=self_concept),alpha=.1) +
geom_line(data=cfact2,aes(col=c,group=interaction(c,class)),lwd=1) +
geom_point(data=cfact2,aes(y=self_concept,col=c), alpha=.6) +
geom_point(data=ccc, aes(y=fit),col="red",size=3)+
geom_point(data=ccc, aes(y=mufit),col="blue",size=3)+
theme(legend.position = "bottom")
plotwb + plotmu
plotwb + plotmu & plot_layout(guides="collect")
plotwb + plotmu + plot_layout(guides="collect")
ccc = bfdat[1,] |> mutate(
fit = predict(wbmod,newdata=bfdat[1,]),
wbfit = fit + fixef(wbmod)[3],
mufit = fit + fixef(mlakmod)[3],
)
cfact =
bind_rows(
bfdat |> filter(class==1) |> mutate(c="actual"),
bfdat |> filter(class==1) |>
mutate(grade=grade+1,grade_avg=grade_avg+1,c="counterfactual")
)
cfact$.fitted = predict(wbmod,newdata=cfact)
cfact$.fitted[11:20]-cfact$.fitted[1:10]
plotwb = broom.mixed::augment(wbmod) |>
mutate(grade=grade_avg+grade_dev) |>
ggplot(aes(x=grade,y=.fitted,group=class))+
geom_line(alpha=.3)+
geom_point(aes(y=self_concept),alpha=.1) +
geom_line(data=cfact,aes(col=c,group=interaction(c,class)),lwd=1) +
geom_point(data=cfact,aes(y=self_concept,col=c), alpha=.6) +
geom_point(data=ccc, aes(y=fit),col="red",size=3)+
geom_point(data=ccc, aes(x=grade+1,y=wbfit),col="blue",size=3)+
guides(col="none")
cfact2 =
bind_rows(
bfdat |> filter(class==1) |> mutate(c="actual"),
bfdat |> filter(class==1) |>
mutate(grade=grade+1,grade_avg=grade_avg+1,c="counterfactual")
)
cfact2$.fitted = predict(mlakmod,newdata=cfact2)
cfact2$.fitted[11:20]-cfact2$.fitted[1:10]
plotmu = broom.mixed::augment(mlakmod) |>
ggplot(aes(x=grade,y=.fitted,group=class))+
geom_line(alpha=.3)+
geom_point(aes(y=self_concept),alpha=.1) +
geom_line(data=cfact2,aes(col=c,group=interaction(c,class)),lwd=1) +
geom_point(data=cfact2,aes(y=self_concept,col=c), alpha=.6) +
geom_point(data=ccc, aes(y=fit),col="red",size=3)+
geom_point(data=ccc, aes(y=mufit),col="blue",size=3)+
theme(legend.position = "bottom")
plotwb + plotmu
ccc = bfdat[1,] |> mutate(
fit = predict(wbmod,newdata=bfdat[1,]),
wbfit = fit + fixef(wbmod)[3],
mufit = fit + fixef(mlakmod)[3],
)
cfact =
bind_rows(
bfdat |> filter(class==1) |> mutate(c="actual"),
bfdat |> filter(class==1) |>
mutate(grade=grade+1,grade_avg=grade_avg+1,c="counterfactual")
)
cfact$.fitted = predict(wbmod,newdata=cfact)
cfact$.fitted[11:20]-cfact$.fitted[1:10]
plotwb = broom.mixed::augment(wbmod) |>
mutate(grade=grade_avg+grade_dev) |>
ggplot(aes(x=grade,y=.fitted,group=class))+
geom_line(alpha=.3)+
geom_point(aes(y=self_concept),alpha=.1) +
geom_line(data=cfact,aes(col=c,group=interaction(c,class)),lwd=1) +
geom_point(data=cfact,aes(y=self_concept,col=c), alpha=.6) +
geom_point(data=ccc, aes(y=fit),col="red",size=3)+
geom_point(data=ccc, aes(x=grade+1,y=wbfit),col="blue",size=3)+
theme(legend.position = "bottom")
cfact2 =
bind_rows(
bfdat |> filter(class==1) |> mutate(c="actual"),
bfdat |> filter(class==1) |>
mutate(grade=grade+1,grade_avg=grade_avg+1,c="counterfactual")
)
cfact2$.fitted = predict(mlakmod,newdata=cfact2)
cfact2$.fitted[11:20]-cfact2$.fitted[1:10]
plotmu = broom.mixed::augment(mlakmod) |>
ggplot(aes(x=grade,y=.fitted,group=class))+
geom_line(alpha=.3)+
geom_point(aes(y=self_concept),alpha=.1) +
geom_line(data=cfact2,aes(col=c,group=interaction(c,class)),lwd=1) +
geom_point(data=cfact2,aes(y=self_concept,col=c), alpha=.6) +
geom_point(data=ccc, aes(y=fit),col="red",size=3)+
geom_point(data=ccc, aes(y=mufit),col="blue",size=3)+
guides(col="none")
plotwb + plotmu
#| label: fig-mlak
#| echo: false
#| out-width: "100%"
#| fig-cap: "The within-between model estimates the effect of the group average increasing by 1 but the individual observation's relative standing staying the same. The Mundlak model estimates the effect of the group average increasing by 1, but the individual observations raw value staying the same."
ccc = bfdat[1,] |> mutate(
fit = predict(wbmod,newdata=bfdat[1,]),
wbfit = fit + fixef(wbmod)[3],
mufit = fit + fixef(mlakmod)[3],
)
cfact =
bind_rows(
bfdat |> filter(class==1) |> mutate(c="actual"),
bfdat |> filter(class==1) |>
mutate(grade=grade+1,grade_avg=grade_avg+1,c="counterfactual")
)
cfact$.fitted = predict(wbmod,newdata=cfact)
cfact$.fitted[11:20]-cfact$.fitted[1:10]
plotwb = broom.mixed::augment(wbmod) |>
mutate(grade=grade_avg+grade_dev) |>
ggplot(aes(x=grade,y=.fitted,group=class))+
geom_line(alpha=.3)+
geom_point(aes(y=self_concept),alpha=.1) +
geom_line(data=cfact,aes(col=c,group=interaction(c,class)),lwd=1) +
geom_point(data=cfact,aes(y=self_concept,col=c), alpha=.6) +
geom_point(data=ccc, aes(y=fit),col="red",size=3)+
geom_point(data=ccc, aes(x=grade+1,y=wbfit),col="blue",size=3)+
theme(legend.position = "bottom")
cfact2 =
bind_rows(
bfdat |> filter(class==1) |> mutate(c="actual"),
bfdat |> filter(class==1) |>
mutate(grade=grade+1,grade_avg=grade_avg+1,c="counterfactual")
)
cfact2$.fitted = predict(mlakmod,newdata=cfact2)
cfact2$.fitted[11:20]-cfact2$.fitted[1:10]
plotmu = broom.mixed::augment(mlakmod) |>
ggplot(aes(x=grade,y=.fitted,group=class))+
geom_line(alpha=.3)+
geom_point(aes(y=self_concept),alpha=.1) +
geom_line(data=cfact2,aes(col=c,group=interaction(c,class)),lwd=1) +
geom_point(data=cfact2,aes(y=self_concept,col=c), alpha=.6) +
geom_point(data=ccc, aes(y=fit),col="red",size=3)+
geom_point(data=ccc, aes(y=mufit),col="blue",size=3)+
guides(col="none")
plotwb + plotmu
# Chunk 1: setup
#| label: setup
#| include: false
source('assets/setup.R')
library(xaringanExtra)
library(tidyverse)
library(patchwork)
xaringanExtra::use_panelset()
library(lme4)
library(broom.mixed)
# Chunk 2: fig-scalexlm
#| label: fig-scalexlm
#| fig-cap: "Centering and scaling predictors in linear regression models. Intercepts and their interpretation change when re-centered, and slope coefficients and their interpretation change when scaling, but the overall model stays the same."
#| out-width: "100%"
#| echo: false
hrdat <- read_csv("https://uoepsy.github.io/data/usmr_hrsleep.csv")
df = hrdat |> mutate(x=hrs_sleep,y=HR)
mod = lm(y~x,df)
p1 = ggplot(df, aes(x=x,y=y))+geom_point(alpha=.3)+
geom_smooth(method="lm")+
geom_smooth(method="lm",fullrange=T,lty="dashed",se=F)+
#ylim(0,max(df$y))+
geom_segment(x=0,xend=0,y=0,yend=100)+
geom_segment(x=0,xend=max(df$x),y=0,yend=0)+
geom_point(data=tibble(x=0,y=coef(mod)[1]),size=3,col="blue")+
labs(title="Original", x="Hours Slept",y="HR")+
scale_x_continuous(limits=c(0,14),breaks=0:14)
mod = lm(y~scale(x,scale=F),df)
p2 = ggplot(df, aes(x=x,y=y))+geom_point(alpha=.3)+
geom_smooth(method="lm")+
geom_smooth(method="lm",fullrange=T,lty="dashed",se=F)+
#ylim(0,max(df$y))+
geom_segment(x=mean(df$x),xend=mean(df$x),y=0,yend=100)+
geom_segment(x=0,xend=max(df$x),y=0,yend=0)+
geom_point(data=tibble(x=mean(df$x),y=coef(mod)[1]),size=3,col="blue")+
scale_x_continuous(limits=c(0,14),breaks=map_dbl(seq(7,-7), ~mean(df$x)-.),
labels=seq(-7,7))+
labs(title="Mean Centered", x="Hours Slept\n(mean centered)",y="HR")
mod = lm(y~scale(x),df)
p3 = ggplot(df, aes(x=x,y=y))+geom_point(alpha=.3)+
geom_smooth(method="lm")+
geom_smooth(method="lm",fullrange=T,lty="dashed",se=F)+
#ylim(0,max(df$y))+
geom_segment(x=mean(df$x),xend=mean(df$x),y=0,yend=100)+
geom_segment(x=0,xend=30,y=0,yend=0)+
geom_point(data=tibble(x=mean(df$x),y=coef(mod)[1]),size=3,col="blue")+
scale_x_continuous(limits=c(0,14),
breaks=c(mean(df$x)-(2*sd(df$x)), mean(df$x)-sd(df$x),
mean(df$x),
mean(df$x)+sd(df$x), mean(df$x)+(2*sd(df$x))),
labels=c(-2,-1,0,1,2))+
labs(title="Standardised X", x="Hours Slept\n(standardised)",y="HR")
mod = lm(y~x,df %>% mutate(x=x-8))
p4 = ggplot(df, aes(x=x,y=y))+geom_point(alpha=.3)+
geom_smooth(method="lm")+
geom_smooth(method="lm",fullrange=T,lty="dashed",se=F)+
#ylim(0,max(df$y))+
geom_segment(x=8,xend=8,y=0,yend=100)+
geom_segment(x=0,xend=30,y=0,yend=0)+
geom_point(data=tibble(x=8,y=coef(mod)[1]),size=3,col="blue")+
scale_x_continuous(limits=c(0,14),breaks=0:14, labels=c(0:14)-8)+
labs(title="Centered on 8 hours", x="Hours Slept\n(relative to 8 hours)",y="HR")
p1 + p2 + p3 + p4
# Chunk 3
#| code-fold: true
hrdat <- read_csv("https://uoepsy.github.io/data/usmr_hrsleep.csv")
# original model:
mod_orig <- lm(HR ~ hrs_sleep, data = hrdat)
# model with hrs_sleep mean centered
mod_mc <- lm(HR ~ scale(hrs_sleep, scale=FALSE), data = hrdat)
# model with hrs_sleep standardised
mod_z <- lm(HR ~ scale(hrs_sleep), data = hrdat)
# model with hrs_sleep centered on 8 hours the I() function
# is a handy function that is just needed because the symbols
# + and - normally get interprted in lm() as adding
# and removing predictors.
mod_8 <- lm(HR ~ I(hrs_sleep-8), data = hrdat)
# all models are identical fit
anova(mod_orig, mod_mc, mod_z, mod_8)
# Chunk 4: fig-intcent
#| label: fig-intcent
#| fig-cap: "mean-centering a variable that is involved in an interaction will change the point at which the marginal effect of other variable is estimated at"
#| out-width: "100%"
#| echo: false
hrdat <- hrdat %>%
mutate(
smoke = ifelse(smoke %in% c("v","y"),"y","n"),
hrs_sleepC = hrs_sleep - mean(hrs_sleep)
)
eg2mod <- lm(HR ~ hrs_sleep * smoke, data = hrdat)
eg2mod_cent <- lm(HR ~ hrs_sleepC * smoke, data = hrdat)
as.data.frame(effects::effect("hrs_sleep*smoke",eg2mod,
xlevels=list(hrs_sleep=0:15))) |>
ggplot(aes(x=hrs_sleep,col=smoke,fill=smoke,
y=fit,ymin=lower,ymax=upper))+
geom_ribbon(alpha=.1,col=NA)+
geom_smooth(method=lm,se=F,fullrange=T)+
geom_point(data=hrdat,inherit.aes=F,
aes(y=HR,x=hrs_sleep,col=smoke),
size=3,alpha=.2)+
geom_point(x=0,y=coef(eg2mod)[1], size=4, aes(col="n"))+
geom_point(x=0,y=sum(coef(eg2mod)[c(1,3)]), size=4, aes(col="y"))+
geom_segment(x=0,xend=0,y=coef(eg2mod)[1], yend=sum(coef(eg2mod)[c(1,3)]), lty="dotted", lwd=1,col="black") + labs(title="Original X") +
as.data.frame(effects::effect("hrs_sleepC*smoke",eg2mod_cent,
xlevels=list(hrs_sleepC=(0:15)-mean(hrdat$hrs_sleep)))) |>
ggplot(aes(x=hrs_sleepC,col=smoke,fill=smoke,
y=fit,ymin=lower,ymax=upper))+
geom_ribbon(alpha=.1,col=NA)+
geom_smooth(method=lm,se=F,fullrange=T)+
geom_point(data=hrdat,inherit.aes=F,
aes(y=HR,x=hrs_sleepC,col=smoke),
size=3,alpha=.2)+
geom_point(x=0,y=coef(eg2mod_cent)[1], size=4, aes(col="n"))+
geom_point(x=0,y=sum(coef(eg2mod_cent)[c(1,3)]), size=4, aes(col="y"))+
geom_segment(x=0,xend=0,y=coef(eg2mod_cent)[1], yend=sum(coef(eg2mod_cent)[c(1,3)]), lty="dotted", lwd=1,col="black") + labs(title="Mean Centered X") +
plot_layout(guides="collect")
# Chunk 5: fig-centconv
#| label: fig-centconv
#| fig-cap: "lines indicate predicted values from the model with random intercepts and random slopes of age. Due to how age is coded, the 'intercept' is estimated back at age 0"
#| echo: false
#| fig-height: 4
mmd <- read_csv("https://uoepsy.github.io/data/msmr_mindfuldecline.csv")
mod1 <- lmer(ACE ~ 1 + age +
(1 +age| ppt),
data = mmd)
broom.mixed::augment(mod1) |>
ggplot(aes(x=age,group=ppt))+
geom_point(aes(y=ACE))+
stat_smooth(geom="line",method=lm,se=F,fullrange=T,
alpha=.4,
aes(y=.fitted))+
xlim(0,78)
# Chunk 6
#| echo: false
set.seed(345)
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
u = rnorm(n_groups,0,3)[g]
x = rnorm(N,u)
re = MASS::mvrnorm(n_groups, mu=c(0,0),Sigma=matrix(c(1,0,0,.5),ncol=2))
re1 = re[,1][g]
re_x = re[,2][g]
lp = (0 + re1) + (1 + re_x) * x -1.5*u
y = rnorm(N, mean = lp, sd = 1)
df = data.frame(grade=(scale(x)[,1]*13.6+60.214)/10, class = factor(g),
self_concept=y)
# ggplot(df,aes(x=grade,y=self_concept,col=class))+
#   geom_point()+guides(col="none")+
#   geom_smooth(method=lm,se=F)
bfdat <- df |> mutate(child=1:n(),grade=round(grade,2),self_concept=round(self_concept,2))
# bfdat <- read_csv(TODO)
head(bfdat)
hist(bfdat$grade)
#| echo: false
set.seed(345)
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
u = rnorm(n_groups,0,3)[g]
x = rnorm(N,u)
re = MASS::mvrnorm(n_groups, mu=c(0,0),Sigma=matrix(c(1,0,0,.5),ncol=2))
re1 = re[,1][g]
re_x = re[,2][g]
lp = (0 + re1) + (1 + re_x) * x -1.5*u
y = rnorm(N, mean = lp, sd = 1)
df = data.frame(grade=(scale(x)[,1]*13.6+60.214)/10, class = factor(g),
self_concept=y)
# ggplot(df,aes(x=grade,y=self_concept,col=class))+
#   geom_point()+guides(col="none")+
#   geom_smooth(method=lm,se=F)
bfdat <- df |> mutate(child=1:n(),grade=round(grade,2),self_concept=round(self_concept,2))
write_csv(bfdat, "../../data/lmm_bflpe.csv")
#| code-fold: true
#| fig-height: 4
library(patchwork)
ggplot(bfdat, aes(x=grade,y=self_concept))+
geom_point(alpha=.2) +
ggplot(bfdat,aes(x=class,y=grade))+
geom_jitter(height=0,width=.1,alpha=.2)+
stat_summary(geom="pointrange")+
coord_flip()
bfdat <- read_csv("https://uoepsy.github.io/data/lmm_bflpe.csv")
head(bfdat)
