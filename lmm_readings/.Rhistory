labels=c(-2,-1,0,1,2))+
labs(title="Standardised X", x="Hours Slept\n(standardised)",y="HR")
mod = lm(y~x,df %>% mutate(x=x-8))
p4 = ggplot(df, aes(x=x,y=y))+geom_point(alpha=.3)+
geom_smooth(method="lm")+
geom_smooth(method="lm",fullrange=T,lty="dashed",se=F)+
#ylim(0,max(df$y))+
geom_segment(x=8,xend=8,y=0,yend=100)+
geom_segment(x=0,xend=30,y=0,yend=0)+
geom_point(data=tibble(x=8,y=coef(mod)[1]),size=3,col="blue")+
scale_x_continuous(limits=c(0,14),breaks=0:14, labels=c(0:14)-8)+
labs(title="Centered on 8 hours", x="Hours Slept\n(relative to 8 hours)",y="HR")
p1 + p2 + p3 + p4
# Chunk 3
#| code-fold: true
hrdat <- read_csv("https://uoepsy.github.io/data/usmr_hrsleep.csv")
# original model:
mod_orig <- lm(HR ~ hrs_sleep, data = hrdat)
# model with hrs_sleep mean centered
mod_mc <- lm(HR ~ scale(hrs_sleep, scale=FALSE), data = hrdat)
# model with hrs_sleep standardised
mod_z <- lm(HR ~ scale(hrs_sleep), data = hrdat)
# model with hrs_sleep centered on 8 hours the I() function
# is a handy function that is just needed because the symbols
# + and - normally get interprted in lm() as adding
# and removing predictors.
mod_8 <- lm(HR ~ I(hrs_sleep-8), data = hrdat)
# all models are identical fit
anova(mod_orig, mod_mc, mod_z, mod_8)
# Chunk 4: fig-intcent
#| label: fig-intcent
#| fig-cap: "mean-centering a variable that is involved in an interaction will change the point at which the marginal effect of other variable is estimated at"
#| out-width: "100%"
#| echo: false
hrdat <- hrdat %>%
mutate(
smoke = ifelse(smoke %in% c("v","y"),"y","n"),
hrs_sleepC = hrs_sleep - mean(hrs_sleep)
)
eg2mod <- lm(HR ~ hrs_sleep * smoke, data = hrdat)
eg2mod_cent <- lm(HR ~ hrs_sleepC * smoke, data = hrdat)
as.data.frame(effects::effect("hrs_sleep*smoke",eg2mod,
xlevels=list(hrs_sleep=0:15))) |>
ggplot(aes(x=hrs_sleep,col=smoke,fill=smoke,
y=fit,ymin=lower,ymax=upper))+
geom_ribbon(alpha=.1,col=NA)+
geom_smooth(method=lm,se=F,fullrange=T)+
geom_point(data=hrdat,inherit.aes=F,
aes(y=HR,x=hrs_sleep,col=smoke),
size=3,alpha=.2)+
geom_point(x=0,y=coef(eg2mod)[1], size=4, aes(col="n"))+
geom_point(x=0,y=sum(coef(eg2mod)[c(1,3)]), size=4, aes(col="y"))+
geom_segment(x=0,xend=0,y=coef(eg2mod)[1], yend=sum(coef(eg2mod)[c(1,3)]), lty="dotted", lwd=1,col="black") + labs(title="Original X") +
as.data.frame(effects::effect("hrs_sleepC*smoke",eg2mod_cent,
xlevels=list(hrs_sleepC=(0:15)-mean(hrdat$hrs_sleep)))) |>
ggplot(aes(x=hrs_sleepC,col=smoke,fill=smoke,
y=fit,ymin=lower,ymax=upper))+
geom_ribbon(alpha=.1,col=NA)+
geom_smooth(method=lm,se=F,fullrange=T)+
geom_point(data=hrdat,inherit.aes=F,
aes(y=HR,x=hrs_sleepC,col=smoke),
size=3,alpha=.2)+
geom_point(x=0,y=coef(eg2mod_cent)[1], size=4, aes(col="n"))+
geom_point(x=0,y=sum(coef(eg2mod_cent)[c(1,3)]), size=4, aes(col="y"))+
geom_segment(x=0,xend=0,y=coef(eg2mod_cent)[1], yend=sum(coef(eg2mod_cent)[c(1,3)]), lty="dotted", lwd=1,col="black") + labs(title="Mean Centered X") +
plot_layout(guides="collect")
# Chunk 5: fig-centconv
#| label: fig-centconv
#| fig-cap: "lines indicate predicted values from the model with random intercepts and random slopes of age. Due to how age is coded, the 'intercept' is estimated back at age 0"
#| echo: false
#| fig-height: 4
mmd <- read_csv("https://uoepsy.github.io/data/msmr_mindfuldecline.csv")
mod1 <- lmer(ACE ~ 1 + age +
(1 +age| ppt),
data = mmd)
broom.mixed::augment(mod1) |>
ggplot(aes(x=age,group=ppt))+
geom_point(aes(y=ACE))+
stat_smooth(geom="line",method=lm,se=F,fullrange=T,
alpha=.4,
aes(y=.fitted))+
xlim(0,78)
# Chunk 6
#| echo: false
set.seed(345)
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
u = rnorm(n_groups,0,3)[g]
x = rnorm(N,u)
re = MASS::mvrnorm(n_groups, mu=c(0,0),Sigma=matrix(c(1,0,0,.5),ncol=2))
re1 = re[,1][g]
re_x = re[,2][g]
lp = (0 + re1) + (1 + re_x) * x -1.5*u
y = rnorm(N, mean = lp, sd = 1)
df = data.frame(grade=(scale(x)[,1]*13.6+60.214)/10, class = factor(g),
self_concept=y)
# ggplot(df,aes(x=grade,y=self_concept,col=class))+
#   geom_point()+guides(col="none")+
#   geom_smooth(method=lm,se=F)
bfdat <- df |> mutate(child=1:n(),grade=round(grade,2),self_concept=round(self_concept,2))
# bfdat <- read_csv(TODO)
head(bfdat)
hist(bfdat$grade)
#| echo: false
set.seed(345)
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)
u = rnorm(n_groups,0,3)[g]
x = rnorm(N,u)
re = MASS::mvrnorm(n_groups, mu=c(0,0),Sigma=matrix(c(1,0,0,.5),ncol=2))
re1 = re[,1][g]
re_x = re[,2][g]
lp = (0 + re1) + (1 + re_x) * x -1.5*u
y = rnorm(N, mean = lp, sd = 1)
df = data.frame(grade=(scale(x)[,1]*13.6+60.214)/10, class = factor(g),
self_concept=y)
# ggplot(df,aes(x=grade,y=self_concept,col=class))+
#   geom_point()+guides(col="none")+
#   geom_smooth(method=lm,se=F)
bfdat <- df |> mutate(child=1:n(),grade=round(grade,2),self_concept=round(self_concept,2))
write_csv(bfdat, "../../data/lmm_bflpe.csv")
#| code-fold: true
#| fig-height: 4
library(patchwork)
ggplot(bfdat, aes(x=grade,y=self_concept))+
geom_point(alpha=.2) +
ggplot(bfdat,aes(x=class,y=grade))+
geom_jitter(height=0,width=.1,alpha=.2)+
stat_summary(geom="pointrange")+
coord_flip()
bfdat <- read_csv("https://uoepsy.github.io/data/lmm_bflpe.csv")
head(bfdat)
df <- read_csv("https://uoepsy.github.io/data/lmm_lifesatscot.csv")
tibble(
variable = names(df)
)
# Chunk 1: setup
#| label: setup
#| include: false
source('assets/setup.R')
library(xaringanExtra)
library(tidyverse)
library(patchwork)
library(ggdist)
xaringanExtra::use_panelset()
qcounter <- function(){
if(!exists("qcounter_i")){
qcounter_i <<- 1
}else{
qcounter_i <<- qcounter_i + 1
}
qcounter_i
}
library(lme4)
# Chunk 2
#| echo: false
tibble(variable=names(read_csv("https://uoepsy.github.io/data/schoolmot.csv")),
description = c(
"Child's Education Motivation Score (range 0 - 10)",
"Funding ('state' or 'private')",
"Name of School that the child attends",
"Child's end-of-year grade average (0-100)")
) |> gt::gt()
# Chunk 3
df <- read_csv("https://uoepsy.github.io/data/schoolmot.csv")
mod1 <- lmer(grade ~ motiv * funding +
(1 + motiv | schoolid),
data = df)
summary(mod1)
df <- read_csv("https://uoepsy.github.io/data/lmm_lifesatscot.csv")
tibble(
variable = names(df),
description =
)
tibble(
variable = names(df),
description = ""
)
#| echo: false
df <- read_csv("https://uoepsy.github.io/data/lmm_lifesatscot.csv")
tibble(
variable = names(df),
description = c("Age (years)","Life Satisfaction score","Dwelling (town/city in Scotland)","Size of Dwelling (> or <100k people)")
) |> gt::gt()
head(df)
df<-read_csv("https://uoepsy.github.io/data/msmr_nssjobsat.csv")
head(df)
#| echo: false
df<-read_csv("https://uoepsy.github.io/data/msmr_nssjobsat.csv")
tibble(variable=names(df),
description = c(
"National Student Satisfaction Rating for the Department",
"Department name",
"Pay scale of employee",
"Job satisfaction of employee",
"Binary question of whether the employee considered themselves to be satisfied with their work (1) or not (0)"
)
) %>% gt::gt()
head(df)
n_distinct(df$dept)
variable = names(bfdat),
bfdat <- read_csv("https://uoepsy.github.io/data/lmm_bflpe.csv")
names(bfdat)
install.packages("buildmer")
#| eval: false
df <- read_csv("https://uoepsy.github.io/data/lmm_lifesatscot.csv")
# Chunk 1: setup
#| label: setup
#| include: false
source('assets/setup.R')
library(xaringanExtra)
library(tidyverse)
library(patchwork)
library(ggdist)
xaringanExtra::use_panelset()
qcounter <- function(){
if(!exists("qcounter_i")){
qcounter_i <<- 1
}else{
qcounter_i <<- qcounter_i + 1
}
qcounter_i
}
library(lme4)
# Chunk 2
#| echo: false
tibble(variable=names(read_csv("https://uoepsy.github.io/data/schoolmot.csv")),
description = c(
"Child's Education Motivation Score (range 0 - 10)",
"Funding ('state' or 'private')",
"Name of School that the child attends",
"Child's end-of-year grade average (0-100)")
) |> gt::gt()
# Chunk 4
#| echo: false
df <- read_csv("https://uoepsy.github.io/data/lmm_lifesatscot.csv")
tibble(
variable = names(df),
description = c("Age (years)","Life Satisfaction score","Dwelling (town/city in Scotland)","Size of Dwelling (> or <100k people)")
) |> gt::gt()
# if you want to see a cross-level interaction (not relevant for RQ):
mod2 <- lmer(lifesat ~ 1 + age * size + (1 + age | dwelling), df)
summary(mod2)
# if you want to see a cross-level interaction (not relevant for RQ):
mod2 <- lmer(lifesat ~ 1 + age * size + (1  | dwelling), df)
# if you want to see a cross-level interaction (not relevant for RQ):
mod2 <- lmer(lifesat ~ 1 + age * size + (1 + age | dwelling), df)
# if you want to see a cross-level interaction (not relevant for RQ):
df$age <- df$age/10 # makes fitting easier
mod2 <- lmer(lifesat ~ 1 + age * size + (1 + age | dwelling), df)
df <- read_csv("https://uoepsy.github.io/data/lmm_jsup.csv")
df <- read_csv("https://uoepsy.github.io/data/lmm_jsup.csv")
mod <- lmer(wp ~ employment_length + role + (1 + role | dept), df)
# either Roles or Seniority would work here:
mod <- lmer(wp ~ employment_length + seniority + (1 + seniority | dept), df)
mod <- lmer(wp ~ employment_length + role + (1 + role | dept), df)
mod <- lmer(wp ~ employment_length + role + (1 | dept), df)
df <- read_csv("https://uoepsy.github.io/data/toy2.csv")
# Chunk 1: setup
#| label: setup
#| include: false
source('assets/setup.R')
library(xaringanExtra)
library(tidyverse)
library(patchwork)
library(ggdist)
xaringanExtra::use_panelset()
qcounter <- function(){
if(!exists("qcounter_i")){
qcounter_i <<- 1
}else{
qcounter_i <<- qcounter_i + 1
}
qcounter_i
}
library(lme4)
# Chunk 2
#| echo: false
tibble(variable=names(read_csv("https://uoepsy.github.io/data/schoolmot.csv")),
description = c(
"Child's Education Motivation Score (range 0 - 10)",
"Funding ('state' or 'private')",
"Name of School that the child attends",
"Child's end-of-year grade average (0-100)")
) |> gt::gt()
# Chunk 4
#| echo: false
df <- read_csv("https://uoepsy.github.io/data/lmm_lifesatscot.csv")
tibble(
variable = names(df),
description = c("Age (years)","Life Satisfaction score","Dwelling (town/city in Scotland)","Size of Dwelling (> or <100k people)")
) |> gt::gt()
# Chunk 6
#| echo: false
jsup <- read_csv("https://uoepsy.github.io/data/lmm_jsup.csv")
tibble(
variable = names(jsup),
description = c(
"Name of government department",
"Department Acronym",
"Whether the department functions as hybrid department with various employees working remotely (1), or as a fully in-person office (0)",
"Employee role (A, B or C)",
"Employees seniority point. These map to roles, such that role A is 0-4, role B is 5-9, role C is 10-14. Higher numbers indicate more seniority",
"Length of employment in the department (years)",
"Composite Measure of 'Workplace Pride'")
) |> gt::gt()
# Chunk 8
#| echo: false
load(url("https://uoepsy.github.io/data/wellbeingwork3.rda"))
d3 <- wellbeingwork3
tibble(variable=names(d3),
description = c(
"Participant ID",
"Timepoint (0 = baseline, 1 = 12 months, 2 = 24 months, 3 = 36 months)",
"Employment Condition ('control' = 5 day week, 28 days of leave. 'unlimited_leave' = 5 days a week, unlimited leave. 'fourday_week' = 4 day week, 28 days of leave)",
"Wellbeing score (Warwick Edinburgh Mental Wellbeing Scale). Range 15 - 75, with higher scores indicating better mental wellbeing")
) %>% gt::gt()
# Chunk 10
library(gt)
tibble(variable=names(read_csv("https://uoepsy.github.io/data/toy2.csv")),
description=c("Type of Toy","Year Released","Character","Hours of practice per week","Reading Age")
) %>% gt::gt()
df <- read_csv("https://uoepsy.github.io/data/toy2.csv")
#| eval: false
df <- read_csv("https://uoepsy.github.io/data/stressint.csv")
df$time <- factor(df$time, levels=c("Pre","During","Post"))
#| eval: false
#| error: true
#| warning: true
#| message: true
mod1 <- lmer(stress ~ time*group +
(1 + time|ppt),
data = df)
df<-read_csv("https://uoepsy.github.io/data/msmr_nssjobsat.csv")
mod <- lmer(jobsat ~ 1 + payscale + (1 + payscale | dept), df)
dfape1 <- read_csv("https://uoepsy.github.io/data/lmm_apespecies.csv")
dfape2 <- read_csv("https://uoepsy.github.io/data/lmm_apeage.csv")
head(dfape1)
head(dfape2)
df <- full_join(dfape1, dfape2)
mod <- lmer(dominance ~ age * species + (1 + age | ape), df)
dfape1 <- read_csv("https://uoepsy.github.io/data/lmm_apespecies.csv")
dfape2 <- read_csv("https://uoepsy.github.io/data/lmm_apeage.csv")
df <- full_join(dfape1, dfape2)
mod <- lmer(dominance ~ age * species + (1 + age | ape), df)
mod.rstr <- lmer(dominance ~ age + species + (1 + age | ape), df)
anova(mod.rstr, mod)
#| eval: false
dfape1 <- read_csv("https://uoepsy.github.io/data/lmm_apespecies.csv")
dfape2 <- read_csv("https://uoepsy.github.io/data/lmm_apeage.csv")
df <- full_join(dfape1, dfape2)
#| eval: false
df <- df |>
mutate(
# fix species typos
species = case_when(
species %in% c("chimp","chimpanzee") ~ "chimp",
species %in% c("gorilla","gorrila") ~ "gorilla",
TRUE ~ species
)
) |>
filter(
# get rid of ages -99
age > 0,
# keep when dominance is between -5 and 5
# (5 here is a slightly arbitrary choice, but you can see from
# our checks that this will only exclude the two extreme datapoints
# that are 21.2 and 19.4
(dominance < 5 & dominance > -5)
)
#| eval: false
mod <- lmer(dominance ~ age * species + (1 + age | ape), df)
mod.rstr <- lmer(dominance ~ age + species + (1 + age | ape), df)
anova(mod.rstr, mod)
df <- read_csv("https://uoepsy.github.io/data/lmm_mindfuldeclineFULL.csv")
mod <- lmer(ACE ~ 1 + ageC * condition +
( 1 + ageC * condition | sitename) +
(1 + ageC | sitename:ppt),
data = df)
df$ageC <- df$age-60
mod <- lmer(ACE ~ 1 + ageC * condition +
( 1 + ageC * condition | sitename) +
(1 + ageC | sitename:ppt),
data = df)
mod <- lmer(ACE ~ 1 + ageC * condition +
( 1 + ageC + condition | sitename) +
(1 + ageC | sitename:ppt),
data = df)
# probably simplify to
mod <- lmer(ACE ~ 1 + ageC * condition +
( 1 + ageC | sitename) +
(1 + ageC | sitename:ppt),
data = df)
df <- read_csv("https://uoepsy.github.io/data/lmm_gadeduc.csv")
df <- df |>
pivot_longer(2:last_col(), names_to="visit",values_to="GAD") |>
mutate(
visit = as.numeric(gsub("visit_","",visit))
) |>
separate(patient, into=c("therapist","group","patient"), sep="_")
mod <- lmer(GAD~ visit*group+
(1+visit*group|therapist)+
(1+visit|therapist:patient),
df)
#| eval: false
df <- read_csv("https://uoepsy.github.io/data/lmm_laughs.csv")
head(df)
mod <- lmer(rating ~ delivery +
(1 + delivery | joke_id) +
(1 + delivery | ppt),
data = df)
#| eval: false
df <- read_csv("https://uoepsy.github.io/data/lmm_alcgad.csv")
df |> count(centerID)
df |> count(center)
df
df <- df |>
group_by(ppt) |>
mutate(
gadm = mean(gad),
gaddev = gad - mean(gad)
) |> ungroup()
lmer(alcunits ~ gadm + gaddev +
(1 + gaddev | center) +
(1 + gaddev | center:ppt),
df)
mod <- lmer(alcunits ~ gadm + gaddev +
(1 + gaddev | center) +
(1 + gaddev | center:ppt),
df)
summary(mod)
mod <- lmer(alcunits ~ gadm + gaddev + center +
(1 + gaddev | ppt),
df)
summary(mod)
mod <- lmer(alcunits ~ (gadm + gaddev)*intervention +
(1 + gaddev | center) +
(1 + gaddev | center:ppt),
df)
mod <- lmer(alcunits ~ (gadm + gaddev)*intervention +
(1 | center) +
(1 + gaddev | center:ppt),
df)
mod <- lmer(alcunits ~ center + (gadm + gaddev)*intervention +
(1 + gaddev | center:ppt),
df)
mod <- lmer(alcunits ~ center + (gadm + gaddev)*intervention +
(1 + gaddev | ppt),
df)
summary(mod)
mod <- lmer(alcunits ~ center + (gadm + gaddev)*intervention +
(1 | ppt),
df)
df <- read_csv("https://uoepsy.github.io/data/dapr3_tgu.csv")
mod <- lmer(tgu ~ physm + physdev +
(1 + physdev | patient),
data = df)
df |> group_by(patient) |>
mutate(
physm = mean(phys),
physdev = phys - mean(phys)
) |> ungroup()
mod <- lmer(tgu ~ physm + physdev +
(1 + physdev | patient),
data = df)
df <- read_csv("https://uoepsy.github.io/data/dapr3_tgu.csv")
df |> group_by(patient) |>
mutate(
physm = mean(phys),
physdev = phys - mean(phys)
) |> ungroup()
df <- df |> group_by(patient) |>
mutate(
physm = mean(phys),
physdev = phys - mean(phys)
) |> ungroup()
mod <- lmer(tgu ~ physm + physdev +
(1 + physdev | patient),
data = df)
df |> count(hospital)
mod <- lmer(tgu ~ hospital + physm + physdev +
(1 + physdev | patient),
data = df)
df <- read_csv("https://uoepsy.github.io/data/lmm_bflpe.csv")
head(df)
#| eval: false
df <- read_csv("https://uoepsy.github.io/data/lmm_bflpe.csv")
df <- df |> group_by(class) |>
mutate(
gradem = mean(grade),
gradedev = grade - mean(grade)
)
mod <- lmer(self_concept ~ gradem + gradedev +
(1 + gradedev | class),
data = df)
df <- read_csv("https://uoepsy.github.io/data/hangry.csv")
head(df)
df <- read_csv("https://uoepsy.github.io/data/hangry.csv")
df <- df |> group_by(ppt) |>
mutate(
hungerm = mean(q_hunger),
hungerdev = q_hunger - mean(q_hunger)
)
mod <- lmer(q_irritability ~ (hungerm + hungerdev) * fivetwo +
(1 + hungerdev | ppt),
data = df)
mod <- lmer(q_irritability ~ (hungerm + hungerdev) * fivetwo +
(1 + hungerdev | ppt),
data = df,
control=lmerControl(optimizer="bobyqa"))
